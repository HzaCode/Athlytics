[{"path":[]},{"path":"https://hezhiang.com/Athlytics/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://hezhiang.com/Athlytics/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://hezhiang.com/Athlytics/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://hezhiang.com/Athlytics/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official email address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://hezhiang.com/Athlytics/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement ang@hezhiang.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://hezhiang.com/Athlytics/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://hezhiang.com/Athlytics/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://hezhiang.com/Athlytics/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://hezhiang.com/Athlytics/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://hezhiang.com/Athlytics/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://hezhiang.com/Athlytics/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://hezhiang.com/Athlytics/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to athlytics","title":"Contributing to athlytics","text":"Thank considering contributing Athlytics! welcome contributions community.","code":""},{"path":"https://hezhiang.com/Athlytics/CONTRIBUTING.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to Contribute","title":"Contributing to athlytics","text":"follow “GitHub Flow” like process contributions made Pull Requests. make contribution, please follow steps: Check Existing Issues: starting work new feature bug fix, please check Issues tab see someone else already reported issue working . Open Issue (Necessary): Bug Reports: find bug, please open new issue. Describe bug тепло, including steps reproduce , expected happen, actually happened. Include relevant version information athlytics R. Feature Requests: idea new feature, please open issue discuss . allows us discuss potential feature ensure aligns project’s goals significant development effort made. Contributions: want contribute ways (e.g., documentation improvements, refactoring), ’s still good idea open issue first discuss proposed changes. Fork Repository: Fork athlytics repository GitHub account. Create Branch: Create new branch forked repository contribution. Choose descriptive branch name (e.g., fix-plot-bug, add-new-metric). Make Changes: Make changes branch. Ensure code follows existing style add relevant tests new functionality bug fixes. add new functions, please include Roxygen documentation. Run devtools::check() locally ensure changes pass checks. Commit Changes: Commit changes clear descriptive commit message. Push Fork: Push changes forked repository. Open Pull Request (PR): Go original athlytics repository open Pull Request branch main branch (relevant development branch specified). PR description, clearly describe changes made link issue addressing (e.g., “Closes #123” “Fixes #456”). Ensure PR passes automated checks (e.g., GitHub Actions). Discuss Iterate: prepared discuss changes make modifications based feedback maintainers.","code":""},{"path":"https://hezhiang.com/Athlytics/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to athlytics","text":"participating project, expected uphold Code Conduct.","code":""},{"path":"https://hezhiang.com/Athlytics/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions?","title":"Contributing to athlytics","text":"questions, feel free open issue reach maintainers.","code":""},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"vignette demonstrates advanced features Athlytics sports physiology analysis: Data Quality Control: Detecting flagging HR/power spikes, GPS drift ACWR EWMA: Exponentially weighted moving average confidence bands Cohort Reference Analysis: Multi-athlete percentile comparisons features make Athlytics suitable individual training analysis multi-athlete research studies.","code":""},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"data-quality-control","dir":"Articles","previous_headings":"","what":"1. Data Quality Control","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"calculating physiological metrics, ’s crucial ensure data quality. flag_quality() function detects common issues activity stream data.","code":""},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"basic-quality-checking","dir":"Articles","previous_headings":"1. Data Quality Control","what":"Basic Quality Checking","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"Output interpretation: - quality_score: Overall quality (0-1), 1 = perfect - flagged_pct: Percentage data points issues - steady_state_pct: Percentage suitable EF/decoupling calculations","code":"library(Athlytics) library(dplyr)  # Load a single activity with stream data activities <- load_local_activities(\"export_12345678.zip\")  # Parse stream data from a FIT/TCX file # (Assuming you have stream data - this is a conceptual example) stream_data <- parse_activity_file(\"path/to/activity.fit\")  # Flag quality issues flagged_data <- flag_quality(   stream_data,   sport = \"Run\",   hr_range = c(30, 220),           # Valid HR range   pw_range = c(0, 1500),            # Valid power range   max_run_speed = 7.0,              # Max speed (m/s) ≈ 2:23/km pace   max_hr_jump = 10,                 # Max HR change per second   max_pw_jump = 300,                # Max power change per second   min_steady_minutes = 20,          # Min duration for steady-state   steady_cv_threshold = 8           # CV% threshold for steady-state )  # View quality summary summary_stats <- quality_summary(flagged_data) print(summary_stats)"},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"why-quality-control-matters","dir":"Articles","previous_headings":"1. Data Quality Control","what":"Why Quality Control Matters","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"Without quality control: - HR spikes sensor errors inflate HRSS calculations - GPS drift creates artificially high speeds, affecting pace metrics - Non-steady-state segments contaminate Efficiency Factor (EF) calculations quality control: - clean data contributes metrics - Steady-state detection ensures valid EF/decoupling calculations - Researchers can report data quality publications","code":""},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"acwr-with-ewma-method","dir":"Articles","previous_headings":"","what":"2. ACWR with EWMA Method","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"Traditional ACWR uses rolling averages (RA). EWMA method offers: - Greater sensitivity recent training changes - Customizable decay rates via half-life parameters - Confidence bands via bootstrap quantify uncertainty","code":""},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"comparing-ra-vs-ewma","dir":"Articles","previous_headings":"2. ACWR with EWMA Method","what":"Comparing RA vs EWMA","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"Key differences: - RA: Equal weight days window; sudden jumps old workouts exit window - EWMA: Exponential decay; smooth transitions; responsive recent changes","code":"# Load activities activities <- load_local_activities(\"export_12345678.zip\")  # Calculate ACWR using Rolling Average (traditional) acwr_ra <- calculate_acwr_ewma(   activities,   activity_type = \"Run\",   method = \"ra\",   acute_period = 7,   chronic_period = 28,   load_metric = \"duration_mins\" )  # Calculate ACWR using EWMA acwr_ewma <- calculate_acwr_ewma(   activities,   activity_type = \"Run\",   method = \"ewma\",   half_life_acute = 3.5,    # Acute load half-life (days)   half_life_chronic = 14,   # Chronic load half-life (days)   load_metric = \"duration_mins\" )  # Compare the two methods library(ggplot2) ggplot() +   geom_line(data = acwr_ra, aes(x = date, y = acwr_smooth),              color = \"blue\", size = 1, linetype = \"solid\") +   geom_line(data = acwr_ewma, aes(x = date, y = acwr_smooth),              color = \"red\", size = 1, linetype = \"dashed\") +   labs(title = \"ACWR: Rolling Average vs EWMA\",        subtitle = \"Blue = RA (7:28d) | Red = EWMA (3.5:14d half-life)\",        x = \"Date\", y = \"ACWR\") +   theme_minimal()"},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"adding-confidence-bands","dir":"Articles","previous_headings":"2. ACWR with EWMA Method","what":"Adding Confidence Bands","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"Confidence bands quantify uncertainty ACWR estimates, essential research reporting. Interpretation: - Gray band: 95% confidence interval moving-block bootstrap - Wider bands = uncertainty (e.g., high load variability) - Narrower bands = stable estimates","code":"# Calculate EWMA with 95% confidence bands acwr_ewma_ci <- calculate_acwr_ewma(   activities,   activity_type = \"Run\",   method = \"ewma\",   half_life_acute = 3.5,   half_life_chronic = 14,   load_metric = \"duration_mins\",   ci = TRUE,                # Enable confidence intervals   B = 200,                  # Bootstrap iterations   block_len = 7,            # Block length (days) for bootstrap   conf_level = 0.95         # 95% CI )  # Plot with confidence bands ggplot(acwr_ewma_ci, aes(x = date)) +   geom_ribbon(aes(ymin = acwr_lower, ymax = acwr_upper),                fill = \"gray70\", alpha = 0.5) +   geom_line(aes(y = acwr_smooth), color = \"black\", size = 1) +   geom_hline(yintercept = c(0.8, 1.3), linetype = \"dotted\", color = \"green\") +   geom_hline(yintercept = 1.5, linetype = \"dotted\", color = \"red\") +   labs(title = \"ACWR with 95% Confidence Bands\",        subtitle = \"Gray band = bootstrap confidence interval\",        x = \"Date\", y = \"ACWR\") +   theme_minimal()"},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"technical-note-bootstrap-method","dir":"Articles","previous_headings":"2. ACWR with EWMA Method > Adding Confidence Bands","what":"Technical Note: Bootstrap Method","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"confidence bands use moving-block bootstrap: 1. Daily load sequence resampled weekly blocks (preserves within-week correlation) 2. ACWR recalculated bootstrap sample (B = 200 iterations) 3. 2.5th 97.5th percentiles form 95% confidence band approach computationally efficient doesn’t require distributional assumptions.","code":""},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"cohort-reference-analysis","dir":"Articles","previous_headings":"","what":"3. Cohort Reference Analysis","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"analyzing multiple athletes (teams, research cohorts), ’s valuable compare individuals group norms.","code":""},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"multi-athlete-setup","dir":"Articles","previous_headings":"3. Cohort Reference Analysis","what":"Multi-Athlete Setup","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"","code":"# Load data for multiple athletes athlete1 <- load_local_activities(\"athlete1_export.zip\") %>%   mutate(athlete_id = \"athlete1\", sex = \"M\", age_band = \"25-35\")  athlete2 <- load_local_activities(\"athlete2_export.zip\") %>%   mutate(athlete_id = \"athlete2\", sex = \"F\", age_band = \"25-35\")  athlete3 <- load_local_activities(\"athlete3_export.zip\") %>%   mutate(athlete_id = \"athlete3\", sex = \"M\", age_band = \"35-45\")  # Combine cohort_data <- bind_rows(athlete1, athlete2, athlete3)  # Calculate ACWR for each athlete cohort_acwr <- cohort_data %>%   group_by(athlete_id) %>%   group_modify(~ calculate_acwr_ewma(.x, method = \"ewma\")) %>%   ungroup() %>%   left_join(     cohort_data %>% select(athlete_id, sex, age_band) %>% distinct(),     by = \"athlete_id\"   )"},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"calculate-reference-percentiles","dir":"Articles","previous_headings":"3. Cohort Reference Analysis","what":"Calculate Reference Percentiles","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"Output:","code":"# Calculate cohort reference by sport and sex reference <- cohort_reference(   cohort_acwr,   metric = \"acwr_smooth\",   by = c(\"sport\", \"sex\"),           # Group by sport and sex   probs = c(0.05, 0.25, 0.5, 0.75, 0.95),  # Percentiles   min_athletes = 3                  # Minimum athletes per group )  # View reference structure head(reference) # A tibble: 6 × 5   date       sport sex   percentile value n_athletes   <date>     <chr> <chr> <chr>      <dbl>      <int> 1 2024-01-01 Run   M     p05        0.65          5 2 2024-01-01 Run   M     p25        0.82          5 3 2024-01-01 Run   M     p50        0.98          5 4 2024-01-01 Run   M     p75        1.15          5 5 2024-01-01 Run   M     p95        1.38          5"},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"plot-individual-vs-cohort","dir":"Articles","previous_headings":"3. Cohort Reference Analysis","what":"Plot Individual vs Cohort","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"Interpretation: - Black line: Individual athlete’s ACWR trend - Dark shaded area (P25-P75): “Normal” range (50% cohort) - Light shaded area (P5-P95): Extended range (90% cohort) - Dashed line (P50): Median (cohort center) Use cases: - Outlier detection: Athletes consistently P95 P5 - Load matching: Ensure similar load profiles comparing injury rates - Benchmarking: Compare individual’s trajectory team norms","code":"# Extract one athlete's data individual <- cohort_acwr %>%    filter(athlete_id == \"athlete1\")  # Plot with cohort reference p <- plot_with_reference(   individual = individual,   reference = reference %>% filter(sex == \"M\"),  # Match athlete's group   metric = \"acwr_smooth\",   bands = c(\"p25_p75\", \"p05_p95\", \"p50\") )  print(p)"},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"integrated-workflow-example","dir":"Articles","previous_headings":"","what":"4. Integrated Workflow Example","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"’s complete research workflow combining features:","code":"library(Athlytics) library(dplyr) library(ggplot2)  # --- Step 1: Load multi-athlete cohort --- cohort_files <- c(\"athlete1_export.zip\", \"athlete2_export.zip\", \"athlete3_export.zip\") cohort_data <- lapply(cohort_files, function(file) {   load_local_activities(file) %>%     mutate(athlete_id = tools::file_path_sans_ext(basename(file))) }) %>% bind_rows()  # --- Step 2: Quality control (conceptual - for stream data) --- # If you have stream data, flag quality before calculating metrics # cohort_data <- cohort_data %>% #   group_by(athlete_id) %>% #   mutate(quality_score = calculate_quality_score(streams))  # --- Step 3: Calculate ACWR with EWMA + CI --- cohort_acwr <- cohort_data %>%   group_by(athlete_id) %>%   group_modify(~ calculate_acwr_ewma(     .x,     method = \"ewma\",     half_life_acute = 3.5,     half_life_chronic = 14,     load_metric = \"duration_mins\",     ci = TRUE,     B = 100  # Reduced for speed in example   )) %>%   ungroup()  # --- Step 4: Calculate cohort reference --- reference <- cohort_reference(   cohort_acwr,   metric = \"acwr_smooth\",   by = c(\"sport\"),   probs = c(0.05, 0.25, 0.5, 0.75, 0.95),   min_athletes = 3 )  # --- Step 5: Visualize individual with confidence + cohort --- individual <- cohort_acwr %>% filter(athlete_id == \"athlete1\")  p <- plot_with_reference(individual, reference, metric = \"acwr_smooth\") +   # Add individual's confidence bands   geom_ribbon(data = individual,                aes(x = date, ymin = acwr_lower, ymax = acwr_upper),               fill = \"blue\", alpha = 0.2)  print(p)  # --- Step 6: Export for statistical analysis --- write.csv(cohort_acwr, \"cohort_acwr_with_ci.csv\", row.names = FALSE) write.csv(reference, \"cohort_reference.csv\", row.names = FALSE)"},{"path":[]},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"acwr-method-selection","dir":"Articles","previous_headings":"5. Methodological Notes for JOSS/Research","what":"ACWR Method Selection","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"Default parameters: - RA: 7-day acute, 28-day chronic (common literature) - EWMA: 3.5-day acute half-life, 14-day chronic half-life (equivalent decay)","code":""},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"confidence-bands-limitations","dir":"Articles","previous_headings":"5. Methodological Notes for JOSS/Research","what":"Confidence Bands Limitations","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"causal inference: Bands reflect sampling variability, prediction injury Assumes stationarity: training pattern changes fundamentally, past data may representative Block length matters: Default 7-day blocks preserve weekly structure; adjust training cycle differs","code":""},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"cohort-reference-interpretation","dir":"Articles","previous_headings":"5. Methodological Notes for JOSS/Research","what":"Cohort Reference Interpretation","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"⚠️ Critical distinction: Percentile bands descriptive population variability, confidence intervals individual’s “true” value. Correct interpretation: - “Athlete 75th percentile cohort” ✅ - “Athlete’s ACWR significantly higher cohort” ❌ (requires statistical test) Minimum sample sizes: - P25-P75: n ≥ 5 athletes - P5-P95: n ≥ 20 athletes (stable extremes)","code":""},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"faq-for-advanced-features","dir":"Articles","previous_headings":"","what":"6. FAQ for Advanced Features","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"Q: choose EWMA half-life? : Start defaults (3.5:14d ≈ 7:28d RA). responsive monitoring, reduce proportionally (e.g., 2.5:10d). smoother trends, increase (e.g., 5:20d). Q: Bootstrap slow. Can reduce B? : Yes. B = 50–100 often sufficient visual inspection. publication, use B = 200–500. Q: cohort < 5 athletes? : Set min_athletes = 3, report limitation. Percentiles n < 5 unstable. Q: Can use methods injury prediction? : . descriptive monitoring tools. Injury prediction requires proper case-control studies, controlling confounders, validation. See Carey et al. (2018) discussion ACWR limitations. Q: cite Athlytics? : Use standard software citation format version number repository URL. See main tutorial complete citation.","code":""},{"path":"https://hezhiang.com/Athlytics/articles/advanced_features.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Advanced Features: EWMA, Quality Control, and Cohort Analysis","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.37     desc_1.4.3        R6_2.6.1          fastmap_1.2.0     #>  [5] xfun_0.53         cachem_1.1.0      knitr_1.50        htmltools_0.5.8.1 #>  [9] rmarkdown_2.30    lifecycle_1.0.4   cli_3.6.5         sass_0.4.10       #> [13] pkgdown_2.1.3     textshaping_1.0.4 jquerylib_0.1.4   systemfonts_1.3.1 #> [17] compiler_4.5.1    tools_4.5.1       ragg_1.5.0        evaluate_1.0.5    #> [21] bslib_0.9.0       yaml_2.3.10       jsonlite_2.0.0    rlang_1.1.6       #> [25] fs_1.6.6          htmlwidgets_1.6.4"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"welcome-to-athlytics","dir":"Articles","previous_headings":"","what":"Welcome to Athlytics","title":"Getting Started with Athlytics","text":"tutorial guide complete workflow—loading Strava data generating training analytics. end, ’ll understand use core features Athlytics longitudinal exercise physiology analysis. ’ll Learn: load explore Strava export data Calculate interpret training load metrics (ACWR) Analyze aerobic fitness trends (Efficiency Factor) Quantify cardiovascular drift (Decoupling) Track personal bests performance progression Export results analysis Time Required: 30-60 minutes","code":""},{"path":[]},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"installation","dir":"Articles","previous_headings":"Prerequisites","what":"Installation","title":"Getting Started with Athlytics","text":"installation instructions, see README. quick version:","code":"# CRAN (stable) install.packages(\"Athlytics\")  # GitHub (latest features) remotes::install_github('HzaCode/Athlytics')"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"your-strava-data-export","dir":"Articles","previous_headings":"Prerequisites","what":"Your Strava Data Export","title":"Getting Started with Athlytics","text":"’ll need Strava data export ZIP file. haven’t exported data yet, see Strava Export Guide follow steps README Quick Start. Quick Summary: 1. Go Strava Settings → Account → Download Delete Account 2. Request “Download” (delete!) 3. Wait email download link 4. Download ZIP file (e.g., export_12345678.zip) 5. Don’t unzip — Athlytics reads ZIP files directly","code":""},{"path":[]},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"basic-loading","dir":"Articles","previous_headings":"Loading Your Data","what":"Basic Loading","title":"Getting Started with Athlytics","text":"","code":"library(Athlytics) library(dplyr)  # For data manipulation  # Load your activities activities <- load_local_activities(\"path/to/export_12345678.zip\")  # View the first few rows head(activities)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"understanding-the-data-structure","dir":"Articles","previous_headings":"Loading Your Data","what":"Understanding the Data Structure","title":"Getting Started with Athlytics","text":"Let’s explore just loaded: Important Columns: activity_id — Unique identifier date — Activity date sport — Activity type (Run, Ride, Swim, etc.) distance_km — Distance kilometers duration_mins — Duration minutes avg_hr — Average heart rate (recorded) max_hr — Maximum heart rate avg_pace_min_km — Average pace running avg_speed_kmh — Average speed avg_power — Average power cycling (available) elevation_gain — Total elevation gain (meters) best_efforts — Personal best times various distances","code":"# How many activities do you have? nrow(activities) # Example output: [1] 847  # What sports are in your data? table(activities$sport) # Example output: #   Ride  Run  Swim #    312  498    37  # Date range range(activities$date, na.rm = TRUE) # Example output: [1] \"2018-01-05\" \"2024-12-20\"  # Key columns in the dataset names(activities)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"data-quality-checks","dir":"Articles","previous_headings":"Loading Your Data","what":"Data Quality Checks","title":"Getting Started with Athlytics","text":"analysis, ’s good practice check data: Pro Tip: Many Athlytics functions require heart rate data. Filter !.na(avg_hr) calculating EF decoupling.","code":"# Summary statistics summary(activities %>% select(distance_km, duration_mins, avg_hr))  # Check for missing heart rate data sum(!is.na(activities$avg_hr)) / nrow(activities) * 100 # Shows % of activities with HR data  # Activities without HR data activities %>%    filter(is.na(avg_hr)) %>%   count(sport)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"filtering-your-data","dir":"Articles","previous_headings":"Loading Your Data","what":"Filtering Your Data","title":"Getting Started with Athlytics","text":"focused analysis, ’ll often want filter sport date:","code":"# Only running activities runs <- activities %>%    filter(sport == \"Run\")  # Recent activities (last 6 months) recent <- activities %>%    filter(date >= Sys.Date() - 180)  # Runs with heart rate data from 2024 runs_2024_hr <- activities %>%    filter(sport == \"Run\",          !is.na(avg_hr),          lubridate::year(date) == 2024)  # Long runs only (> 15 km) long_runs <- activities %>%    filter(sport == \"Run\", distance_km > 15)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"core-analyses","dir":"Articles","previous_headings":"","what":"Core Analyses","title":"Getting Started with Athlytics","text":"Now let’s dive main analytical features. metric provides different insights training physiology.","code":""},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"training-load-acwr","dir":"Articles","previous_headings":"Core Analyses","what":"1. Training Load (ACWR)","title":"Getting Started with Athlytics","text":"ACWR? Acute:Chronic Workload Ratio (ACWR) compares recent training (acute load, typically 7 days) long-term baseline (chronic load, typically 28 days). ’s used identify injury risk periods. Risk Zones: < 0.8 — Undertraining (fitness may decline) 0.8-1.3 — “Sweet spot” (optimal adaptation zone) 1.3-1.5 — Moderate risk (load increasing rapidly) > 1.5 — High risk (excessive load spike, injury risk)","code":""},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"basic-acwr-calculation","dir":"Articles","previous_headings":"Core Analyses > 1. Training Load (ACWR)","what":"Basic ACWR Calculation","title":"Getting Started with Athlytics","text":"Output Columns: date — Date daily_load — Training load day (sum duration/distance) atl — Acute Training Load (7-day rolling average) ctl — Chronic Training Load (28-day rolling average) acwr_smooth — ACWR ratio (ATL / CTL)","code":"# Calculate ACWR for all running activities acwr_data <- calculate_acwr(   activities_data = runs,   activity_type = \"Run\",        # Filter by sport   load_metric = \"duration_mins\", # Can also be \"distance_km\" or \"hrss\"   acute_period = 7,              # 7-day rolling average   chronic_period = 28            # 28-day rolling average )  # View results head(acwr_data)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"visualizing-acwr","dir":"Articles","previous_headings":"Core Analyses > 1. Training Load (ACWR)","what":"Visualizing ACWR","title":"Getting Started with Athlytics","text":"","code":"# Basic plot plot_acwr(acwr_data)  # With risk zones highlighted (recommended) plot_acwr(acwr_data, highlight_zones = TRUE)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"interpreting-your-acwr","dir":"Articles","previous_headings":"Core Analyses > 1. Training Load (ACWR)","what":"Interpreting Your ACWR","title":"Getting Started with Athlytics","text":"look : Gradual increases = Good progressive overload Sharp spikes 1.5 = Warning signs, consider recovery Extended periods < 0.8 = May need increase training volume Stable values 0.8-1.3 = Optimal training stimulus Practical Example:","code":"# Identify high-risk periods high_risk <- acwr_data %>%   filter(acwr_smooth > 1.5) %>%   select(date, daily_load, acwr_smooth)  print(high_risk)  # Check recent trend recent_acwr <- acwr_data %>%   filter(date >= Sys.Date() - 60) %>%   arrange(desc(date))  head(recent_acwr, 10)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"choosing-load-metrics","dir":"Articles","previous_headings":"Core Analyses > 1. Training Load (ACWR)","what":"Choosing Load Metrics","title":"Getting Started with Athlytics","text":"Different load metrics different goals: duration_mins — Simple, works sports, good general monitoring distance_km — Better distance-focused training (marathon prep) hrss — accurate physiological load (requires HR data)","code":"# Calculate using HRSS (heart rate stress score) acwr_hrss <- calculate_acwr(   activities_data = runs,   load_metric = \"hrss\"  # Automatically calculated if avg_hr available )"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"efficiency-factor-ef","dir":"Articles","previous_headings":"Core Analyses","what":"2. Efficiency Factor (EF)","title":"Getting Started with Athlytics","text":"EF? Efficiency Factor measures much output (speed/power) generate per unit input (heart rate). ’s key indicator aerobic fitness improvements. Metrics: Pace/HR (running) — Speed per heartbeat: Higher = better aerobic fitness Power/HR (cycling) — Watts per heartbeat: Higher = better aerobic fitness Changes Mean: Increasing EF = Aerobic fitness improving (work HR) Stable EF = Maintaining current fitness Decreasing EF = Fatigue, overtraining, fitness loss","code":""},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"calculate-ef","dir":"Articles","previous_headings":"Core Analyses > 2. Efficiency Factor (EF)","what":"Calculate EF","title":"Getting Started with Athlytics","text":"Output Columns: date — Activity date ef_value — Efficiency Factor value avg_hr — Average heart rate avg_pace_min_km (avg_power) — Output metric","code":"# For running (Pace/HR) ef_runs <- calculate_ef(   activities_data = runs,   activity_type = \"Run\",   ef_metric = \"pace_hr\"  # Pace divided by HR )  # For cycling (Power/HR) rides <- activities %>% filter(sport == \"Ride\") ef_cycling <- calculate_ef(   activities_data = rides,   activity_type = \"Ride\",   ef_metric = \"power_hr\"  # Power divided by HR )  # View results head(ef_runs)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"visualizing-ef-trends","dir":"Articles","previous_headings":"Core Analyses > 2. Efficiency Factor (EF)","what":"Visualizing EF Trends","title":"Getting Started with Athlytics","text":"","code":"# Basic plot plot_ef(ef_runs)  # With smoothing line to see trend (recommended) plot_ef(ef_runs, add_trend_line = TRUE)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"interpreting-ef","dir":"Articles","previous_headings":"Core Analyses > 2. Efficiency Factor (EF)","what":"Interpreting EF","title":"Getting Started with Athlytics","text":"Best Practices: Track trends weeks/months, day--day fluctuations Use steady-state efforts — Interval workouts skew results Consider external factors — Heat, altitude, fatigue affect EF Practical Analysis:","code":"# Calculate monthly average EF library(lubridate)  ef_monthly <- ef_runs %>%   mutate(month = floor_date(date, \"month\")) %>%   group_by(month) %>%   summarise(     mean_ef = mean(ef_value, na.rm = TRUE),     n_activities = n()   ) %>%   arrange(desc(month))  print(ef_monthly)  # Compare first vs last 3 months recent_ef <- ef_runs %>% filter(date >= Sys.Date() - 90) %>% pull(ef_value) baseline_ef <- ef_runs %>% filter(date < Sys.Date() - 90, date >= Sys.Date() - 180) %>% pull(ef_value)  cat(sprintf(\"Recent EF: %.2f\\nBaseline EF: %.2f\\nChange: %.1f%%\\n\",             mean(recent_ef, na.rm = TRUE),             mean(baseline_ef, na.rm = TRUE),             (mean(recent_ef, na.rm = TRUE) / mean(baseline_ef, na.rm = TRUE) - 1) * 100))"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"cardiovascular-decoupling","dir":"Articles","previous_headings":"Core Analyses","what":"3. Cardiovascular Decoupling","title":"Getting Started with Athlytics","text":"Decoupling? Decoupling quantifies cardiovascular drift—phenomenon heart rate gradually rises prolonged efforts even pace/power remains constant. Low decoupling indicates good aerobic endurance. Works: function compares efficiency (pace/HR power/HR) first half second half activity: Decoupling %=EFfirst half−EFsecond halfEFfirst half×100 \\text{Decoupling \\%} = \\frac{\\text{EF}_{\\text{first half}} - \\text{EF}_{\\text{second half}}}{\\text{EF}_{\\text{first half}}} \\times 100 Positive values = efficiency decline second half (HR drift); <5% commonly used reference threshold, requires interpretation context steady-state environmental conditions. Interpretation: < 5% — Excellent aerobic base, well-adapted 5-10% — Acceptable, drift manageable > 10% — Significant drift (fatigue, heat, insufficient base fitness)","code":""},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"calculate-decoupling","dir":"Articles","previous_headings":"Core Analyses > 3. Cardiovascular Decoupling","what":"Calculate Decoupling","title":"Getting Started with Athlytics","text":"Output Columns: date — Activity date first_half_ratio — EF first half second_half_ratio — EF second half decoupling_pct — Percentage drift","code":"# For running decoupling_runs <- calculate_decoupling(   activities_data = runs,   activity_type = \"Run\",   decouple_metric = \"pace_hr\",   min_duration_mins = 60  # Only analyze runs ≥ 60 minutes )  # For cycling decoupling_rides <- calculate_decoupling(   activities_data = rides,   activity_type = \"Ride\",   decouple_metric = \"power_hr\",   min_duration_mins = 90  # Longer threshold for cycling )  # View results head(decoupling_runs)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"visualizing-decoupling","dir":"Articles","previous_headings":"Core Analyses > 3. Cardiovascular Decoupling","what":"Visualizing Decoupling","title":"Getting Started with Athlytics","text":"","code":"# Basic plot plot_decoupling(decoupling_runs)  # With metric specification plot_decoupling(decoupling_runs, decouple_metric = \"pace_hr\")"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"practical-applications","dir":"Articles","previous_headings":"Core Analyses > 3. Cardiovascular Decoupling","what":"Practical Applications","title":"Getting Started with Athlytics","text":"1. Assess Aerobic Base: 2. Monitor Training Block Progress: Important Note: Decoupling highly affected environmental conditions (heat, humidity) cumulative fatigue. Always interpret context.","code":"# Recent decoupling average recent_decouple <- decoupling_runs %>%   filter(date >= Sys.Date() - 60) %>%   summarise(avg_decouple = mean(decoupling_pct, na.rm = TRUE))  if (recent_decouple$avg_decouple < 5) {   cat(\"Excellent aerobic base! Ready for higher intensity.\\n\") } else if (recent_decouple$avg_decouple < 10) {   cat(\"Good base, continue building aerobic foundation.\\n\") } else {   cat(\"High decoupling—focus on more easy, long runs.\\n\") } # Compare decoupling over time library(ggplot2)  decoupling_runs %>%   ggplot(aes(x = date, y = decoupling_pct)) +   geom_point(alpha = 0.6) +   geom_smooth(method = \"loess\", se = TRUE) +   geom_hline(yintercept = 5, linetype = \"dashed\", color = \"green\") +   geom_hline(yintercept = 10, linetype = \"dashed\", color = \"orange\") +   labs(title = \"Decoupling Trend Over Time\",        subtitle = \"Lower values = better aerobic endurance\",        x = \"Date\", y = \"Decoupling (%)\") +   theme_minimal()"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"personal-bests-pbs","dir":"Articles","previous_headings":"Core Analyses","what":"4. Personal Bests (PBs)","title":"Getting Started with Athlytics","text":"Track best performances standard distances time.","code":""},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"calculate-pbs","dir":"Articles","previous_headings":"Core Analyses > 4. Personal Bests (PBs)","what":"Calculate PBs","title":"Getting Started with Athlytics","text":"Supported Distances: 400m, 800m, 1km, 1 mile 5km, 10km Half marathon, Marathon","code":"# Extract personal bests pbs <- calculate_pbs(   activities_data = runs,   activity_type = \"Run\" )  # View all PRs print(pbs)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"visualize-pb-progression","dir":"Articles","previous_headings":"Core Analyses > 4. Personal Bests (PBs)","what":"Visualize PB Progression","title":"Getting Started with Athlytics","text":"","code":"# Plot PR progression plot_pbs(pbs)  # Filter to specific distance pbs_5k <- pbs %>% filter(distance == \"5k\") print(pbs_5k)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"load-exposure-analysis","dir":"Articles","previous_headings":"Core Analyses","what":"5. Load Exposure Analysis","title":"Getting Started with Athlytics","text":"Visualize training state 2D space: acute load vs chronic load.","code":""},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"calculate-and-plot-exposure","dir":"Articles","previous_headings":"Core Analyses > 5. Load Exposure Analysis","what":"Calculate and Plot Exposure","title":"Getting Started with Athlytics","text":"Interpretation: Points diagonal = Acute > chronic (ramping training) Points diagonal = Balanced state Points diagonal = Tapering recovery Red zone = High ACWR, injury risk","code":"# Calculate exposure exposure <- calculate_exposure(   activities_data = runs,   activity_type = \"Run\",   load_metric = \"duration_mins\" )  # Plot with risk zones plot_exposure(exposure, highlight_zones = TRUE)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"complete-workflow-example","dir":"Articles","previous_headings":"","what":"Complete Workflow Example","title":"Getting Started with Athlytics","text":"’s realistic, end--end analysis workflow:","code":"library(Athlytics) library(dplyr) library(ggplot2)  # ---- 1. Load and Filter Data ---- activities <- load_local_activities(\"my_strava_export.zip\")  # Focus on running activities with HR data runs <- activities %>%    filter(sport == \"Run\", !is.na(avg_hr))  cat(sprintf(\"Loaded %d running activities with HR data\\n\", nrow(runs)))  # ---- 2. Training Load Monitoring ---- acwr_data <- calculate_acwr(   activities_data = runs,   load_metric = \"duration_mins\" )  # Check current training status current_acwr <- acwr_data %>%    filter(date >= Sys.Date() - 30) %>%   tail(1) %>%   pull(acwr_smooth)  cat(sprintf(\"Current ACWR: %.2f\\n\", current_acwr))  # Visualize p1 <- plot_acwr(acwr_data, highlight_zones = TRUE) +   labs(title = \"6-Month Training Load Progression\") print(p1)  # ---- 3. Aerobic Fitness Tracking ---- ef_data <- calculate_ef(   activities_data = runs,   ef_metric = \"pace_hr\" )  # Calculate fitness trend ef_trend <- ef_data %>%   mutate(month = lubridate::floor_date(date, \"month\")) %>%   group_by(month) %>%   summarise(mean_ef = mean(ef_value, na.rm = TRUE))  p2 <- plot_ef(ef_data, add_trend_line = TRUE) +   labs(title = \"Aerobic Efficiency Trend\") print(p2)  # ---- 4. Endurance Assessment ---- # Only for long runs (> 60 min) decoupling_data <- calculate_decoupling(   activities_data = runs,   min_duration_mins = 60 )  avg_decouple <- mean(decoupling_data$decoupling_pct, na.rm = TRUE) cat(sprintf(\"Average decoupling: %.1f%% (%s aerobic base)\\n\",             avg_decouple,             ifelse(avg_decouple < 5, \"excellent\",                    ifelse(avg_decouple < 10, \"good\", \"needs work\"))))  p3 <- plot_decoupling(decoupling_data) +   labs(title = \"Cardiovascular Drift in Long Runs\") print(p3)  # ---- 5. Export Results ---- # Save plots ggsave(\"acwr_analysis.png\", plot = p1, width = 10, height = 6, dpi = 300) ggsave(\"ef_trend.png\", plot = p2, width = 10, height = 6, dpi = 300) ggsave(\"decoupling.png\", plot = p3, width = 10, height = 6, dpi = 300)  # Export data for further analysis write.csv(acwr_data, \"acwr_results.csv\", row.names = FALSE) write.csv(ef_data, \"ef_results.csv\", row.names = FALSE) write.csv(decoupling_data, \"decoupling_results.csv\", row.names = FALSE)  cat(\"\\nAnalysis complete! Results saved.\\n\")"},{"path":[]},{"path":[]},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"no-data-returned-or-empty-results","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"“No data returned” or empty results","title":"Getting Started with Athlytics","text":"Causes: - Activity type filter doesn’t match data - Required metrics (e.g., HR) missing - Date range activities Solutions:","code":"# Check activity types in your data table(activities$sport)  # Check for HR data availability sum(!is.na(activities$avg_hr))  # Verify date range range(activities$date, na.rm = TRUE)  # Try without filtering first test <- calculate_acwr(activities_data = activities, activity_type = NULL)"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"not-enough-data-for-chronic-period","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"“Not enough data for chronic period”","title":"Getting Started with Athlytics","text":"ACWR requires least 28 days data. Check date range:","code":"# How much data do you have? date_span <- as.numeric(max(activities$date) - min(activities$date)) cat(sprintf(\"Your data spans %d days\\n\", date_span))  # If < 28 days, you need more data or use shorter periods"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"na-values-in-output","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"“NA values in output”","title":"Getting Started with Athlytics","text":"activities may lack required metrics (HR, power, etc.):","code":"# Filter before calculating runs_with_hr <- runs %>% filter(!is.na(avg_hr)) ef_data <- calculate_ef(runs_with_hr, ef_metric = \"pace_hr\")"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"plots-look-strange-or-empty","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Plots look strange or empty","title":"Getting Started with Athlytics","text":"","code":"# Check if data exists nrow(acwr_data) summary(acwr_data$acwr_smooth)  # Try basic R plot first plot(acwr_data$date, acwr_data$acwr_smooth, type = \"l\")"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"getting-help","dir":"Articles","previous_headings":"Troubleshooting","what":"Getting Help","title":"Getting Started with Athlytics","text":"Function documentation: ?calculate_acwr, ?plot_ef, etc. GitHub Issues: Report bugs Package vignettes: browseVignettes(\"Athlytics\")","code":""},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Getting Started with Athlytics","text":"Congratulations! now know use core features Athlytics.","code":""},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"advanced-features","dir":"Articles","previous_headings":"Next Steps","what":"Advanced Features","title":"Getting Started with Athlytics","text":"Ready go deeper? Check : Advanced Features Tutorial — EWMA-based ACWR confidence intervals, quality control, cohort analysis Function Reference — Complete documentation functions","code":""},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"for-researchers","dir":"Articles","previous_headings":"Next Steps","what":"For Researchers","title":"Getting Started with Athlytics","text":"’re using Athlytics research: Cohort Studies: See cohort_reference() multi-athlete percentile comparisons Data Quality: Use flag_quality() stream data quality control Statistical Analysis: functions return tidy data frames ready lme4, survival analysis, etc.","code":""},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"citation","dir":"Articles","previous_headings":"Next Steps","what":"Citation","title":"Getting Started with Athlytics","text":"use Athlytics research, please cite:","code":"@software{athlytics2025,   title   = {Athlytics: A Computational Framework for Longitudinal Analysis of Exercise Physiology},   author  = {Zhiang He},   year    = {2025},   version = {1.0.0},   url     = {https://github.com/HzaCode/Athlytics} }"},{"path":"https://hezhiang.com/Athlytics/articles/athlytics_introduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Getting Started with Athlytics","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.37     desc_1.4.3        R6_2.6.1          fastmap_1.2.0     #>  [5] xfun_0.53         cachem_1.1.0      knitr_1.50        htmltools_0.5.8.1 #>  [9] rmarkdown_2.30    lifecycle_1.0.4   cli_3.6.5         sass_0.4.10       #> [13] pkgdown_2.1.3     textshaping_1.0.4 jquerylib_0.1.4   systemfonts_1.3.1 #> [17] compiler_4.5.1    tools_4.5.1       ragg_1.5.0        evaluate_1.0.5    #> [21] bslib_0.9.0       yaml_2.3.10       jsonlite_2.0.0    rlang_1.1.6       #> [25] fs_1.6.6          htmlwidgets_1.6.4"},{"path":"https://hezhiang.com/Athlytics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhiang . Author, maintainer.","code":""},{"path":"https://hezhiang.com/Athlytics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhiang (2025). Athlytics: Computational Framework Longitudinal Analysis Exercise Physiology. R package version 1.0.0. https://github.com/HzaCode/Athlytics","code":"@Manual{,   title = {Athlytics: A Computational Framework for Longitudinal Analysis of Exercise Physiology},   author = {Zhiang He},   year = {2025},   version = {1.0.0},   url = {https://github.com/HzaCode/Athlytics}, }"},{"path":"https://hezhiang.com/Athlytics/index.html","id":"athlytics","dir":"","previous_headings":"","what":"🚀 Quick Start  •  📊 Core Analyses  •  📝 Citation","title":"Academic R Package for Sports Physiology Analysis from Local Strava Data","text":"--one, offline R toolkit endurance analytics — FIT/TCX/GPX & Strava exports core models (ACWR, EF, Pa:Hr decoupling, PB, Exposure) built-QC & uncertainty. 📘 Docs  •  📦 CRAN  •  🐞 Issues","code":""},{"path":"https://hezhiang.com/Athlytics/index.html","id":"id_-overview","dir":"","previous_headings":"","what":"🎯 Overview","title":"Academic R Package for Sports Physiology Analysis from Local Strava Data","text":"Athlytics powerful R package analyzing endurance training data local Strava exports. provides complete, offline toolkit transform raw data meaningful insights fitness, fatigue, performance. Designed athletes, coaches, sports scientists, Athlytics standardizes entire analysis process—loading data generating publication-quality plots. works offline without needing API keys, data remains completely private workflows stable reproducible forever.","code":""},{"path":"https://hezhiang.com/Athlytics/index.html","id":"id_-key-features","dir":"","previous_headings":"","what":"✨ Key Features","title":"Academic R Package for Sports Physiology Analysis from Local Strava Data","text":"✅ 100% Local Private: Works directly Strava ZIP export. data ever uploaded, internet connection API keys needed. full control information. ✅ --One Analysis Pipeline: Handles everything loading cleaning raw data calculating advanced metrics creating visualizations. patching together different tools. ✅ Robust Scientific Metrics: Implements widely used metrics performance analysis, including Acute--Chronic Workload Ratio (ACWR), Aerobic Efficiency (EF), Cardiovascular Decoupling, built-quality checks. ✅ Powerful Cohort Analysis: Purpose-built comparing multiple athletes. Easily load data team group benchmark individual’s progress cohort. ✅ Reproducible Shareable: workflow self-contained, analysis scripts easy share produce results every time, making ideal reliable, long-term tracking.","code":""},{"path":"https://hezhiang.com/Athlytics/index.html","id":"id_-installation","dir":"","previous_headings":"","what":"📦 Installation","title":"Academic R Package for Sports Physiology Analysis from Local Strava Data","text":"1. Stable Release (CRAN) Note: CRAN version may include latest features like direct ZIP file support. 2. Development Version (GitHub - Recommended)","code":"install.packages(\"Athlytics\") # First, install remotes if you don't have it # install.packages(\"remotes\")  # Install the latest development version from GitHub remotes::install_github(\"HzaCode/Athlytics\")"},{"path":[]},{"path":"https://hezhiang.com/Athlytics/index.html","id":"id_-step-1-export-your-strava-data","dir":"","previous_headings":"🚀 Quick Start","what":"📥 Step 1: Export Your Strava Data","title":"Academic R Package for Sports Physiology Analysis from Local Strava Data","text":"Navigate Strava Settings → Account. “Download Delete Account,” click “Get Started” “Request Archive”. receive email download link (can take hours). Download ZIP file (e.g., export_12345678.zip). need unzip .","code":""},{"path":"https://hezhiang.com/Athlytics/index.html","id":"id_-step-2-load-and-analyze-cohort-example","dir":"","previous_headings":"🚀 Quick Start","what":"💻 Step 2: Load and Analyze (Cohort Example)","title":"Academic R Package for Sports Physiology Analysis from Local Strava Data","text":"example shows common workflow: loading data several athletes, calculating training load, comparing one athlete group average.","code":"library(Athlytics) library(dplyr)  # 1. Load data for a cohort of athletes, adding unique IDs athlete1 <- load_local_activities(\"path/to/athlete1_export.zip\") %>% mutate(athlete_id = \"A1\") athlete2 <- load_local_activities(\"path/to/athlete2_export.zip\") %>% mutate(athlete_id = \"A2\") cohort_data <- bind_rows(athlete1, athlete2)  # 2. Calculate ACWR for each athlete in the cohort cohort_acwr <- cohort_data %>%   group_by(athlete_id) %>%   group_modify(~ calculate_acwr(.x, load_metric = \"duration_mins\")) %>%   ungroup()  # 3. Generate percentile bands to serve as a reference for the cohort reference_bands <- cohort_reference(cohort_acwr, metric = \"acwr_smooth\")  # 4. Plot an individual's data against the cohort reference bands individual_acwr <- cohort_acwr %>% filter(athlete_id == \"A1\") plot_with_reference(individual = individual_acwr, reference = reference_bands)"},{"path":"https://hezhiang.com/Athlytics/index.html","id":"id_-core-analyses","dir":"","previous_headings":"","what":"📊 Core Analyses","title":"Academic R Package for Sports Physiology Analysis from Local Strava Data","text":"functions return clean, tidy tibble data frames, making easy perform custom analysis visualizations.","code":""},{"path":"https://hezhiang.com/Athlytics/index.html","id":"id_1️⃣-training-load-monitoring-acwr","dir":"","previous_headings":"📊 Core Analyses","what":"1️⃣ Training Load Monitoring (ACWR)","title":"Academic R Package for Sports Physiology Analysis from Local Strava Data","text":"Track training load progressing avoid ramping quickly, can help managing injury risk. Learn ACWR analysis…","code":""},{"path":"https://hezhiang.com/Athlytics/index.html","id":"id_2️⃣-aerobic-efficiency-ef","dir":"","previous_headings":"📊 Core Analyses","what":"2️⃣ Aerobic Efficiency (EF)","title":"Academic R Package for Sports Physiology Analysis from Local Strava Data","text":"See aerobic fitness changing time comparing output (pace power) effort (heart rate). rising trend great sign improving fitness. Learn Aerobic Efficiency…","code":""},{"path":"https://hezhiang.com/Athlytics/index.html","id":"id_3️⃣-cardiovascular-decoupling","dir":"","previous_headings":"📊 Core Analyses","what":"3️⃣ Cardiovascular Decoupling","title":"Academic R Package for Sports Physiology Analysis from Local Strava Data","text":"Measure endurance analyzing much heart rate “drifts” upward steady-state workout. low decoupling rate (<5%) marker excellent aerobic conditioning. Learn Decoupling…","code":""},{"path":"https://hezhiang.com/Athlytics/index.html","id":"id_-citation","dir":"","previous_headings":"","what":"📝 Citation","title":"Academic R Package for Sports Physiology Analysis from Local Strava Data","text":"use Athlytics research, please cite software. also recommend citing original methodological papers metrics used (see documentation references).","code":"@software{athlytics2025,   title   = {Athlytics: A Computational Framework for Longitudinal Analysis of Exercise Physiology},   author  = {Zhiang He},   year    = {2025},   version = {1.0.0},   url     = {https://github.com/HzaCode/Athlytics} }"},{"path":"https://hezhiang.com/Athlytics/index.html","id":"id_-contributing","dir":"","previous_headings":"","what":"🤝 Contributing","title":"Academic R Package for Sports Physiology Analysis from Local Strava Data","text":"Contributions welcome! Please read CONTRIBUTING.md guide follow Code Conduct. 🐛 Report Issue: Open Issue 💡 Suggest Feature: Start Discussion 🔧 Submit Pull Request: appreciate help improving Athlytics.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/add_reference_bands.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Cohort Reference Bands to Existing Plot — add_reference_bands","title":"Add Cohort Reference Bands to Existing Plot — add_reference_bands","text":"Adds percentile reference bands cohort individual's metric plot.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/add_reference_bands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Cohort Reference Bands to Existing Plot — add_reference_bands","text":"","code":"add_reference_bands(   p,   reference_data,   bands = c(\"p25_p75\", \"p05_p95\", \"p50\"),   alpha = 0.15,   colors = list(p25_p75 = \"#440154FF\", p05_p95 = \"#3B528BFF\", p50 = \"#21908CFF\") )"},{"path":"https://hezhiang.com/Athlytics/reference/add_reference_bands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Cohort Reference Bands to Existing Plot — add_reference_bands","text":"p ggplot object (typically plot_acwr similar). reference_data data frame cohort_reference(). bands Character vector specifying bands plot. Options: \"p25_p75\" (inner quartiles), \"p05_p95\" (outer 5-95 range), \"p50\" (median). Default c(\"p25_p75\", \"p05_p95\", \"p50\"). alpha Transparency reference bands (0-1). Default 0.15. colors Named list colors bands. Default uses viridis colors.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/add_reference_bands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Cohort Reference Bands to Existing Plot — add_reference_bands","text":"ggplot object added reference bands.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/add_reference_bands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Cohort Reference Bands to Existing Plot — add_reference_bands","text":"","code":"if (FALSE) { # \\dontrun{ # Create base plot p <- plot_acwr(acwr_df = individual_acwr)  # Add reference bands p_with_ref <- add_reference_bands(p, reference_data = cohort_ref) print(p_with_ref) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_colors_acwr_zones.html","id":null,"dir":"Reference","previous_headings":"","what":"ACWR Zone Colors — athlytics_colors_acwr_zones","title":"ACWR Zone Colors — athlytics_colors_acwr_zones","text":"Standardized colors ACWR risk zones following sports science conventions.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_colors_acwr_zones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ACWR Zone Colors — athlytics_colors_acwr_zones","text":"","code":"athlytics_colors_acwr_zones()"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_colors_ef.html","id":null,"dir":"Reference","previous_headings":"","what":"Efficiency Factor Colors — athlytics_colors_ef","title":"Efficiency Factor Colors — athlytics_colors_ef","text":"Colors efficiency factor trends activity type.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_colors_ef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Efficiency Factor Colors — athlytics_colors_ef","text":"","code":"athlytics_colors_ef()"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_colors_training_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Training Load Colors — athlytics_colors_training_load","title":"Training Load Colors — athlytics_colors_training_load","text":"Colors acute chronic training load visualization.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_colors_training_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Training Load Colors — athlytics_colors_training_load","text":"","code":"athlytics_colors_training_load()"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_academic.html","id":null,"dir":"Reference","previous_headings":"","what":"Academic Muted Color Palette — athlytics_palette_academic","title":"Academic Muted Color Palette — athlytics_palette_academic","text":"Low-saturation, elegant palette suitable formal publications technical reports. Emphasizes clarity visual impact.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_academic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Academic Muted Color Palette — athlytics_palette_academic","text":"","code":"athlytics_palette_academic()"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_academic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Academic Muted Color Palette — athlytics_palette_academic","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) ggplot(data, aes(x, y, color = group)) +   geom_line() +   scale_color_manual(values = athlytics_palette_academic()) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell Journal Palette — athlytics_palette_cell","title":"Cell Journal Palette — athlytics_palette_cell","text":"Modern palette based Cell Press visualization standards. Balances professional appearance visual clarity.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_cell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell Journal Palette — athlytics_palette_cell","text":"","code":"athlytics_palette_cell()"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_nature.html","id":null,"dir":"Reference","previous_headings":"","what":"Nature-Inspired Color Palette — athlytics_palette_nature","title":"Nature-Inspired Color Palette — athlytics_palette_nature","text":"Professional, colorblind-friendly palette based Nature journal's visualization guidelines. Suitable multi-series plots.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_nature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nature-Inspired Color Palette — athlytics_palette_nature","text":"","code":"athlytics_palette_nature()"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_nature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nature-Inspired Color Palette — athlytics_palette_nature","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) ggplot(data, aes(x, y, color = group)) +   geom_line() +   scale_color_manual(values = athlytics_palette_nature()) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_science.html","id":null,"dir":"Reference","previous_headings":"","what":"Science Magazine Palette — athlytics_palette_science","title":"Science Magazine Palette — athlytics_palette_science","text":"Classic palette inspired Science magazine's figure guidelines. Conservative widely accepted scientific community.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_science.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Science Magazine Palette — athlytics_palette_science","text":"","code":"athlytics_palette_science()"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_vibrant.html","id":null,"dir":"Reference","previous_headings":"","what":"Vibrant High-Contrast Palette — athlytics_palette_vibrant","title":"Vibrant High-Contrast Palette — athlytics_palette_vibrant","text":"High-saturation palette optimized presentations posters. Maximum visual impact maintaining colorblind accessibility.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_vibrant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vibrant High-Contrast Palette — athlytics_palette_vibrant","text":"","code":"athlytics_palette_vibrant()"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_palette_vibrant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vibrant High-Contrast Palette — athlytics_palette_vibrant","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) ggplot(data, aes(x, y, fill = category)) +   geom_bar(stat = \"identity\") +   scale_fill_manual(values = athlytics_palette_vibrant()) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_acwr.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample ACWR Data for Athlytics — athlytics_sample_acwr","title":"Sample ACWR Data for Athlytics — athlytics_sample_acwr","text":"dataset containing pre-calculated Acute:Chronic Workload Ratio (ACWR) related metrics, derived simulated Strava data. Used examples tests.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_acwr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample ACWR Data for Athlytics — athlytics_sample_acwr","text":"","code":"athlytics_sample_acwr"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_acwr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample ACWR Data for Athlytics — athlytics_sample_acwr","text":"tibble 365 rows 5 variables: date Date metrics, Date object. atl Acute Training Load, numeric value. ctl Chronic Training Load, numeric value. acwr Acute:Chronic Workload Ratio, numeric value. acwr_smooth Smoothed ACWR, numeric value.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_acwr.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample ACWR Data for Athlytics — athlytics_sample_acwr","text":"Simulated data generated package examples.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_decoupling.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Aerobic Decoupling Data for Athlytics — athlytics_sample_decoupling","title":"Sample Aerobic Decoupling Data for Athlytics — athlytics_sample_decoupling","text":"dataset containing pre-calculated aerobic decoupling percentages, derived simulated Strava data. Used examples tests.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_decoupling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Aerobic Decoupling Data for Athlytics — athlytics_sample_decoupling","text":"","code":"athlytics_sample_decoupling"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_decoupling.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Aerobic Decoupling Data for Athlytics — athlytics_sample_decoupling","text":"tibble 365 rows 2 variables: date Date activity, Date object. decoupling Calculated decoupling percentage, numeric value.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_decoupling.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample Aerobic Decoupling Data for Athlytics — athlytics_sample_decoupling","text":"Simulated data generated package examples.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_ef.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Efficiency Factor (EF) Data for Athlytics — athlytics_sample_ef","title":"Sample Efficiency Factor (EF) Data for Athlytics — athlytics_sample_ef","text":"dataset containing pre-calculated Efficiency Factor (EF) values, derived simulated Strava data. Used examples tests.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_ef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Efficiency Factor (EF) Data for Athlytics — athlytics_sample_ef","text":"","code":"athlytics_sample_ef"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_ef.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Efficiency Factor (EF) Data for Athlytics — athlytics_sample_ef","text":"data.frame 50 rows 3 variables: date Date activity, Date object. activity_type Type activity (e.g., \"Run\", \"Ride\"), character string. ef_value Calculated Efficiency Factor, numeric value.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_ef.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample Efficiency Factor (EF) Data for Athlytics — athlytics_sample_ef","text":"Simulated data generated package examples.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Training Load Exposure Data for Athlytics — athlytics_sample_exposure","title":"Sample Training Load Exposure Data for Athlytics — athlytics_sample_exposure","text":"dataset contains daily training load, ATL, CTL, ACWR, derived simulated Strava data. Used examples tests, particularly plot_exposure.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Training Load Exposure Data for Athlytics — athlytics_sample_exposure","text":"","code":"athlytics_sample_exposure"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_exposure.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Training Load Exposure Data for Athlytics — athlytics_sample_exposure","text":"tibble 365 rows 5 variables: date Date metrics, Date object. daily_load Calculated daily training load, numeric value. ctl Chronic Training Load, numeric value. atl Acute Training Load, numeric value. acwr Acute:Chronic Workload Ratio, numeric value.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_exposure.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample Training Load Exposure Data for Athlytics — athlytics_sample_exposure","text":"Simulated data generated package examples.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_pbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Personal Bests (PBs) Data for Athlytics — athlytics_sample_pbs","title":"Sample Personal Bests (PBs) Data for Athlytics — athlytics_sample_pbs","text":"dataset containing pre-calculated Personal Best (PB) times various distances, derived simulated Strava data. Used examples tests.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_pbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Personal Bests (PBs) Data for Athlytics — athlytics_sample_pbs","text":"","code":"athlytics_sample_pbs"},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_pbs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Personal Bests (PBs) Data for Athlytics — athlytics_sample_pbs","text":"tibble 100 rows 10 variables: activity_id ID activity effort occurred, character string. activity_date Date time activity, POSIXct object. distance Target distance meters best effort, numeric value. elapsed_time Elapsed time effort seconds, numeric value. moving_time Moving time effort seconds, numeric value. time_seconds Typically elapsed_time best efforts, seconds, numeric value. cumulative_pb_seconds personal best time distance date, seconds, numeric value. is_pb Logical, TRUE effort set new personal best. distance_label Factor representing distance (e.g., \"1k\", \"5k\"). time_period Formatted time effort, Period object lubridate.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/athlytics_sample_pbs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample Personal Bests (PBs) Data for Athlytics — athlytics_sample_pbs","text":"Simulated data generated package examples.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Acute:Chronic Workload Ratio (ACWR) — calculate_acwr","title":"Calculate Acute:Chronic Workload Ratio (ACWR) — calculate_acwr","text":"function calculates daily training load derives acute (short-term) chronic (long-term) load averages, computes ratio (ACWR). ACWR helps identify periods rapid training load increases may elevate injury risk. Key Concepts: Acute Load (ATL): Rolling average recent training (default: 7 days) Chronic Load (CTL): Rolling average longer-term training (default: 28 days) ACWR: Ratio ATL CTL (ATL / CTL) Safe Zone: ACWR 0.8-1.3 (optimal training stimulus) Danger Zone: ACWR > 1.5 (increased injury risk)","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Acute:Chronic Workload Ratio (ACWR) — calculate_acwr","text":"","code":"calculate_acwr(   activities_data,   activity_type = NULL,   load_metric = \"duration_mins\",   acute_period = 7,   chronic_period = 28,   start_date = NULL,   end_date = NULL,   user_ftp = NULL,   user_max_hr = NULL,   user_resting_hr = NULL,   smoothing_period = 7 )"},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Acute:Chronic Workload Ratio (ACWR) — calculate_acwr","text":"activities_data data frame activities load_local_activities(). Must contain columns: date, distance, moving_time, elapsed_time, average_heartrate, average_watts, type, elevation_gain. activity_type Required character vector. Filter activities type (e.g., \"Run\", \"Ride\"). Must specify avoid mixing incompatible load metrics. load_metric Character string specifying load calculation method: \"duration_mins\": Training duration minutes (default) \"distance_km\": Distance kilometers \"elapsed_time_mins\": Total elapsed time including stops \"tss\": Training Stress Score approximation using NP/FTP ratio (requires user_ftp) \"hrss\": Heart Rate Stress Score approximation using simplified TRIMP (requires user_max_hr user_resting_hr) \"elevation_gain_m\": Elevation gain meters acute_period Integer. Number days acute load window (default: 7). Represents recent training stimulus. Common values: 3-7 days. chronic_period Integer. Number days chronic load window (default: 28). Represents fitness/adaptation level. Must greater acute_period. Common values: 21-42 days. start_date Optional. Analysis start date (YYYY-MM-DD string, Date, POSIXct). Defaults one year end_date. Earlier data used calculating initial chronic load. end_date Optional. Analysis end date (YYYY-MM-DD string, Date, POSIXct). Defaults current date (Sys.Date()). user_ftp Numeric. Functional Threshold Power watts. Required load_metric = \"tss\". Used normalize power-based training stress. user_max_hr Numeric. maximum heart rate bpm. Required load_metric = \"hrss\". Used heart rate reserve calculations. user_resting_hr Numeric. resting heart rate bpm. Required load_metric = \"hrss\". Used heart rate reserve calculations. smoothing_period Integer. Number days smoothing ACWR using rolling mean (default: 7). Reduces day--day noise clearer trend visualization.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Acute:Chronic Workload Ratio (ACWR) — calculate_acwr","text":"tibble following columns: date Date (Date class) atl Acute Training Load - rolling average acute_period days (numeric) ctl Chronic Training Load - rolling average chronic_period days (numeric) acwr Raw ACWR value (atl / ctl) (numeric) acwr_smooth Smoothed ACWR using smoothing_period rolling mean (numeric)","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Acute:Chronic Workload Ratio (ACWR) — calculate_acwr","text":"Computes Acute:Chronic Workload Ratio (ACWR) local Strava activity data using rolling average methods. ACWR key metric monitoring training load injury risk athletes (Gabbett, 2016; Hulin et al., 2016). Algorithm: Daily Aggregation: Sum activities date compute daily load Complete Time Series: Fill missing days zero load (critical ACWR accuracy) Acute Load (ATL): Rolling mean acute_period days (default: 7) Chronic Load (CTL): Rolling mean chronic_period days (default: 28) ACWR Calculation: ATL / CTL (set NA CTL < 0.01 avoid division zero) Smoothing: Optional rolling mean smoothing_period days visualization Data Requirements: function automatically fetches additional historical data (chronic_period days start_date) ensure accurate chronic load calculations analysis start point. Ensure Strava export contains sufficient historical activities. Load Metric Implementations: \"tss\": Uses normalized power (NP) FTP approximate Training Stress Score (TSS). Formula: (duration_sec × NP × ) / (FTP × 3600) × 100, = NP/FTP (equivalently: hours × ^2 × 100). \"hrss\": HR-based load using heart rate reserve (simplified TRIMP; TrainingPeaks hrTSS). Formula: duration_sec * (HR - resting_HR) / (max_HR - resting_HR). Interpretation Guidelines: ACWR < 0.8: May indicate detraining insufficient load ACWR 0.8-1.3: \"Sweet spot\" - optimal training stimulus lower injury risk ACWR 1.3-1.5: Caution zone - monitor fatigue ACWR > 1.5: High risk zone - consider load management Multi-Athlete Studies: cohort analyses, add athlete_id column calculation use group_by(athlete_id) group_modify(). See examples vignettes details.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Acute:Chronic Workload Ratio (ACWR) — calculate_acwr","text":"Gabbett, T. J. (2016). training-injury prevention paradox: athletes training smarter harder? British Journal Sports Medicine, 50(5), 273-280. Hulin, B. T., et al. (2016). acute:chronic workload ratio predicts injury: high chronic workload may decrease injury risk elite rugby league players. British Journal Sports Medicine, 50(4), 231-236.","code":""},{"path":[]},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Acute:Chronic Workload Ratio (ACWR) — calculate_acwr","text":"","code":"# Example using simulated data (Note: sample data is pre-calculated, shown for demonstration) data(athlytics_sample_acwr) print(head(athlytics_sample_acwr)) #> # A tibble: 6 × 5 #>   date         atl   ctl  acwr acwr_smooth #>   <date>     <dbl> <dbl> <dbl>       <dbl> #> 1 2023-01-01  63.7  63.7     1          NA #> 2 2023-01-02  54.4  54.4     1          NA #> 3 2023-01-03  54.6  54.6     1          NA #> 4 2023-01-04  55.5  55.5     1          NA #> 5 2023-01-05  55.8  55.8     1          NA #> 6 2023-01-06  55.2  55.2     1          NA  if (FALSE) { # \\dontrun{ # Example using local Strava export data # Step 1: Download your Strava data export # Go to Strava.com > Settings > My Account > Download or Delete Your Account # You'll receive a ZIP file via email (e.g., export_12345678.zip)  # Step 2: Load activities directly from ZIP (no extraction needed!) activities <- load_local_activities(\"export_12345678.zip\")  # Or from extracted CSV activities <- load_local_activities(\"strava_export_data/activities.csv\")  # Step 3: Calculate ACWR for Runs (using distance) run_acwr <- calculate_acwr(activities_data = activities,                             activity_type = \"Run\",                            load_metric = \"distance_km\") print(tail(run_acwr))  # Calculate ACWR for Rides (using TSS, requires FTP) ride_acwr_tss <- calculate_acwr(activities_data = activities,                                 activity_type = \"Ride\",                                 load_metric = \"tss\",                                  user_ftp = 280) print(tail(ride_acwr_tss))  # Plot the results plot_acwr(run_acwr, highlight_zones = TRUE)  # Multi-athlete cohort analysis library(dplyr)  # Load data for multiple athletes and add athlete_id athlete1 <- load_local_activities(\"athlete1_export.zip\") %>%   mutate(athlete_id = \"athlete1\")  athlete2 <- load_local_activities(\"athlete2_export.zip\") %>%   mutate(athlete_id = \"athlete2\")  # Combine all athletes cohort_data <- bind_rows(athlete1, athlete2)  # Calculate ACWR for each athlete using group_modify() cohort_acwr <- cohort_data %>%   group_by(athlete_id) %>%   group_modify(~ calculate_acwr(.x,                                   activity_type = \"Run\",                                  load_metric = \"duration_mins\")) %>%   ungroup()  # View results print(cohort_acwr) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr_ewma.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ACWR using EWMA Method with Confidence Bands — calculate_acwr_ewma","title":"Calculate ACWR using EWMA Method with Confidence Bands — calculate_acwr_ewma","text":"Calculates Acute:Chronic Workload Ratio (ACWR) using Exponentially Weighted Moving Average (EWMA) optional bootstrap confidence bands.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr_ewma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ACWR using EWMA Method with Confidence Bands — calculate_acwr_ewma","text":"","code":"calculate_acwr_ewma(   activities_data,   activity_type = NULL,   load_metric = \"duration_mins\",   method = c(\"ra\", \"ewma\"),   acute_period = 7,   chronic_period = 28,   half_life_acute = 3.5,   half_life_chronic = 14,   start_date = NULL,   end_date = NULL,   user_ftp = NULL,   user_max_hr = NULL,   user_resting_hr = NULL,   smoothing_period = 7,   ci = FALSE,   B = 200,   block_len = 7,   conf_level = 0.95 )"},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr_ewma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ACWR using EWMA Method with Confidence Bands — calculate_acwr_ewma","text":"activities_data data frame activities load_local_activities(). activity_type Optional. Filter activities type. Default NULL includes . load_metric Method calculating daily load. Default \"duration_mins\". method ACWR calculation method: \"ra\" (rolling average) \"ewma\". Default \"ra\". acute_period Days acute window (RA method). Default 7. chronic_period Days chronic window (RA method). Default 28. half_life_acute Half-life acute EWMA days. Default 3.5. half_life_chronic Half-life chronic EWMA days. Default 14. start_date Optional. Analysis start date. Defaults one year ago. end_date Optional. Analysis end date. Defaults today. user_ftp Required load_metric = \"tss\". user_max_hr Required load_metric = \"hrss\". user_resting_hr Required load_metric = \"hrss\". smoothing_period Days smoothing ACWR. Default 7. ci Logical. Whether calculate confidence bands (EWMA ). Default FALSE. B Number bootstrap iterations (ci = TRUE). Default 200. block_len Block length moving-block bootstrap (days). Default 7. conf_level Confidence level (0-1). Default 0.95 (95\\% CI).","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr_ewma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ACWR using EWMA Method with Confidence Bands — calculate_acwr_ewma","text":"data frame columns: date, atl, ctl, acwr, acwr_smooth, ci = TRUE method = \"ewma\": acwr_lower, acwr_upper.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr_ewma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate ACWR using EWMA Method with Confidence Bands — calculate_acwr_ewma","text":"function extends basic ACWR calculation two methods: RA (Rolling Average): Traditional rolling mean approach (default). EWMA (Exponentially Weighted Moving Average): Uses exponential decay configurable half-lives. responsive recent changes. EWMA Formula: smoothing parameter α calculated half-life: α = ln(2) / half_life. EWMA update : E_t = α × L_t + (1-α) × E_{t-1} L_t daily load E_t exponentially weighted average. Confidence Bands: ci = TRUE method = \"ewma\", uses moving-block bootstrap estimate uncertainty. daily load sequence resampled weekly blocks (preserving within-week correlation), ACWR recalculated, percentiles form confidence bands. accounts temporal correlation training load patterns.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_acwr_ewma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate ACWR using EWMA Method with Confidence Bands — calculate_acwr_ewma","text":"","code":"if (FALSE) { # \\dontrun{ # Load local activities activities <- load_local_activities(\"export_12345678.zip\")  # Calculate ACWR using Rolling Average (RA) acwr_ra <- calculate_acwr_ewma(activities, method = \"ra\")  # Calculate ACWR using EWMA with confidence bands acwr_ewma <- calculate_acwr_ewma(   activities,   method = \"ewma\",   half_life_acute = 3.5,   half_life_chronic = 14,   ci = TRUE,   B = 200 )  # Compare both methods head(acwr_ewma) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/calculate_decoupling.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Aerobic Decoupling — calculate_decoupling","title":"Calculate Aerobic Decoupling — calculate_decoupling","text":"Calculates aerobic decoupling Strava activities local export data.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_decoupling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Aerobic Decoupling — calculate_decoupling","text":"","code":"calculate_decoupling(   activities_data = NULL,   export_dir = \"strava_export_data\",   activity_type = c(\"Run\", \"Ride\"),   decouple_metric = c(\"pace_hr\", \"power_hr\"),   start_date = NULL,   end_date = NULL,   min_duration_mins = 40,   min_steady_minutes = 40,   steady_cv_threshold = 0.08,   min_hr_coverage = 0.9,   quality_control = c(\"off\", \"flag\", \"filter\"),   stream_df = NULL )"},{"path":"https://hezhiang.com/Athlytics/reference/calculate_decoupling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Aerobic Decoupling — calculate_decoupling","text":"activities_data data frame load_local_activities(). Required unless stream_df provided. export_dir Base directory Strava export containing activities folder. Default \"strava_export_data\". activity_type Type(s) activities analyze (e.g., \"Run\", \"Ride\"). decouple_metric Basis calculation: \"pace_hr\" \"power_hr\" (legacy \"pace_hr\"/\"power_hr\" also supported). start_date Optional. Analysis start date (YYYY-MM-DD string Date). Defaults one year ago. end_date Optional. Analysis end date (YYYY-MM-DD string Date). Defaults today. min_duration_mins Minimum activity duration (minutes) include. Default 40. min_steady_minutes Minimum duration (minutes) steady-state segment (default: 40). Activities shorter automatically rejected decoupling calculation. steady_cv_threshold Coefficient variation threshold steady-state (default: 0.08 = 8%). Activities higher variability rejected non-steady-state. min_hr_coverage Minimum HR data coverage threshold (default: 0.9 = 90%). Activities lower HR coverage rejected insufficient data quality. quality_control Quality control mode: \"\" (filtering), \"flag\" (mark issues), \"filter\" (exclude flagged data). Default \"filter\" scientific rigor. stream_df Optional. pre-fetched data frame single activity's stream. provided, calculates decoupling data directly, ignoring parameters. Must include columns: time, heartrate, either velocity_smooth/distance (pace_hr) watts (power_hr).","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_decoupling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Aerobic Decoupling — calculate_decoupling","text":"Returns data frame columns: date Activity date (Date class) decoupling Decoupling percentage (\\%). Positive = HR drift, negative = improved efficiency status Character. \"ok\" successful calculation, \"non_steady\" steady-state criteria met, \"insufficient_data\" data quality issues single numeric decoupling value stream_df provided.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_decoupling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Aerobic Decoupling — calculate_decoupling","text":"Calculates aerobic decoupling (HR drift relative pace/power) using detailed activity stream data local FIT/TCX/GPX files. Provides data plot_decoupling. Compares output/HR efficiency first second halves activities. Positive values indicate HR drift (cardiovascular drift). Best practice: Use load_local_activities() load data, pass function. function parses FIT/TCX/GPX files Strava export extract detailed stream data (time, heartrate, distance/power). Activities split two halves, efficiency factor (output/HR) compared halves.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_decoupling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Aerobic Decoupling — calculate_decoupling","text":"","code":"# Example using simulated data data(Athlytics_sample_data) #> Warning: data set ‘Athlytics_sample_data’ not found print(head(athlytics_sample_decoupling)) #> # A tibble: 6 × 3 #>   date       activity_name decoupling #>   <date>     <chr>              <dbl> #> 1 2023-03-11 Run 1               7.43 #> 2 2023-03-17 Run 2               6.00 #> 3 2023-03-19 Run 3               6.88 #> 4 2023-04-01 Run 4               7.99 #> 5 2023-04-17 Run 5               6.64 #> 6 2023-04-24 Run 6               8.15  if (FALSE) { # \\dontrun{ # Load local activities activities <- load_local_activities(\"strava_export_data/activities.csv\")  # Calculate Pace/HR decoupling for recent runs run_decoupling <- calculate_decoupling(     activities_data = activities,     export_dir = \"strava_export_data\",     activity_type = \"Run\",     decouple_metric = \"pace_hr\",     start_date = \"2024-01-01\" ) print(tail(run_decoupling))  # Calculate for a single activity stream # stream_data <- parse_activity_file(\"strava_export_data/activities/12345.fit\") # single_decoupling <- calculate_decoupling(stream_df = stream_data, decouple_metric = \"pace_hr\") } # }"},{"path":"https://hezhiang.com/Athlytics/reference/calculate_ef.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Efficiency Factor (EF) — calculate_ef","title":"Calculate Efficiency Factor (EF) — calculate_ef","text":"Efficiency Factor measures much work perform per unit cardiovascular effort. Higher EF indicates better aerobic fitness - able maintain faster pace higher power heart rate. Tracking EF time helps monitor aerobic base development training effectiveness. EF Metrics: pace_hr (running): Speed (m/s) / Average HR - Higher values = faster pace HR = better fitness power_hr (cycling): Average Power (watts) / Average HR - Higher values = power HR = better fitness Improves EF? Aerobic base building (Zone 2 training) Improved running/cycling economy Enhanced cardiovascular efficiency Increased mitochondrial density","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_ef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Efficiency Factor (EF) — calculate_ef","text":"","code":"calculate_ef(   activities_data,   activity_type = c(\"Run\", \"Ride\"),   ef_metric = c(\"pace_hr\", \"power_hr\"),   start_date = NULL,   end_date = NULL,   min_duration_mins = 20,   min_steady_minutes = 20,   steady_cv_threshold = 0.08,   min_hr_coverage = 0.9,   quality_control = c(\"off\", \"flag\", \"filter\"),   export_dir = NULL )"},{"path":"https://hezhiang.com/Athlytics/reference/calculate_ef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Efficiency Factor (EF) — calculate_ef","text":"activities_data data frame activities load_local_activities(). Must contain columns: date, type, moving_time, distance, average_heartrate, average_watts (power_hr metric). activity_type Character vector single string specifying activity type(s) analyze. Common values: \"Run\", \"Ride\", c(\"Run\", \"Ride\"). Default: c(\"Run\", \"Ride\"). ef_metric Character string specifying efficiency metric: \"pace_hr\": Pace-based efficiency (running). Formula: speed (m/s) / avg_HR. Units: m·s⁻¹·bpm⁻¹ (higher = better fitness) \"power_hr\": Power-based efficiency (cycling). Formula: avg_watts / avg_HR. Units: W·bpm⁻¹ (higher = better fitness) Default: c(\"pace_hr\", \"power_hr\") (uses first matching metric activity type). start_date Optional. Analysis start date (YYYY-MM-DD string, Date, POSIXct). Defaults one year end_date. end_date Optional. Analysis end date (YYYY-MM-DD string, Date, POSIXct). Defaults current date (Sys.Date()). min_duration_mins Numeric. Minimum activity duration minutes include analysis (default: 20). Filters short activities may represent steady-state aerobic efforts. min_steady_minutes Numeric. Minimum duration (minutes) steady-state segment (default: 20). Activities shorter automatically rejected EF calculation. steady_cv_threshold Numeric. Coefficient variation threshold steady-state (default: 0.08 = 8%). Activities higher variability rejected non-steady-state. min_hr_coverage Numeric. Minimum HR data coverage threshold (default: 0.9 = 90%). Activities lower HR coverage rejected insufficient data quality. quality_control Character. Quality control mode: \"\" (filtering), \"flag\" (mark issues), \"filter\" (exclude flagged data). Default \"filter\" scientific rigor. export_dir Optional. Path Strava export directory containing activity files. provided, enables stream data analysis accurate steady-state detection.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_ef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Efficiency Factor (EF) — calculate_ef","text":"tibble following columns: date Activity date (Date class) activity_type Activity type (character: \"Run\" \"Ride\") ef_value Efficiency Factor value (numeric). Higher = better fitness. Units: m·s⁻¹·bpm⁻¹ pace_hr, W·bpm⁻¹ power_hr. status Character. \"ok\" successful calculation stream data, \"no_streams\" activity-level calculation without stream data, \"non_steady\" steady-state criteria met, \"insufficient_data\" data quality issues, \"too_short\" min_steady_minutes, \"insufficient_hr_data\" HR coverage threshold.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_ef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Efficiency Factor (EF) — calculate_ef","text":"Computes Efficiency Factor (EF) endurance activities, quantifying relationship performance output (pace power) heart rate. EF key indicator aerobic fitness training adaptation (Allen et al., 2019). Algorithm: Filter activities type, date range, minimum duration activity, calculate: pace_hr: (distance / moving_time) / average_heartrate power_hr: average_watts / average_heartrate Return one EF value per activity Data Quality Considerations: Requires heart rate data (activities without HR excluded) power_hr requires power meter data (cycling power) Best steady-state endurance efforts (tempo runs, long rides) Interval workouts may give misleading EF values Environmental factors (heat, altitude) can affect EF Interpretation: Upward trend: Improving aerobic fitness Stable: Maintenance phase Downward trend: Possible overtraining, fatigue, environmental stress Sudden drop: Check illness, equipment change, data quality Typical EF Ranges (pace_hr running): Beginner: 0.01 - 0.015 (m/s per bpm) Intermediate: 0.015 - 0.020 Advanced: 0.020 - 0.025 Elite: > 0.025 Note: EF values relative individual baseline. Focus personal trends rather absolute comparisons athletes.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_ef.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Efficiency Factor (EF) — calculate_ef","text":"Allen, H., Coggan, . R., & McGregor, S. (2019). Training Racing Power Meter (3rd ed.). VeloPress.","code":""},{"path":[]},{"path":"https://hezhiang.com/Athlytics/reference/calculate_ef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Efficiency Factor (EF) — calculate_ef","text":"","code":"# Example using simulated data data(athlytics_sample_ef) print(head(athlytics_sample_ef)) #> # A tibble: 6 × 3 #>   date       activity_type ef_value #>   <date>     <chr>            <dbl> #> 1 2023-01-02 Ride              1.70 #> 2 2023-01-11 Run               2.05 #> 3 2023-01-14 Run               1.58 #> 4 2023-01-17 Ride              1.97 #> 5 2023-01-22 Run               1.77 #> 6 2023-01-27 Run               1.58  if (FALSE) { # \\dontrun{ # Example using local Strava export data activities <- load_local_activities(\"strava_export_data/activities.csv\")  # Calculate Pace/HR efficiency factor for Runs ef_data_run <- calculate_ef(activities_data = activities,                               activity_type = \"Run\",                               ef_metric = \"pace_hr\") print(tail(ef_data_run))  # Calculate Power/HR efficiency factor for Rides ef_data_ride <- calculate_ef(activities_data = activities,                               activity_type = \"Ride\",                               ef_metric = \"power_hr\") print(tail(ef_data_ride)) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/calculate_ef_from_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate EF from Stream Data with Steady-State Analysis — calculate_ef_from_stream","title":"Calculate EF from Stream Data with Steady-State Analysis — calculate_ef_from_stream","text":"Calculate efficiency factor (EF) detailed stream data using steady-state analysis. function analyzes heart rate power/pace data find periods steady effort calculates efficiency factor periods.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_ef_from_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate EF from Stream Data with Steady-State Analysis — calculate_ef_from_stream","text":"","code":"calculate_ef_from_stream(   stream_data,   activity_date,   act_type,   ef_metric,   min_steady_minutes,   steady_cv_threshold,   min_hr_coverage,   quality_control )"},{"path":"https://hezhiang.com/Athlytics/reference/calculate_ef_from_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate EF from Stream Data with Steady-State Analysis — calculate_ef_from_stream","text":"stream_data Data frame stream data (time, heartrate, watts/distance columns) activity_date Date activity act_type Activity type (e.g., \"Run\", \"Ride\") ef_metric Efficiency metric calculate (\"pace_hr\" \"power_hr\") min_steady_minutes Minimum duration steady-state analysis (minutes) steady_cv_threshold Coefficient variation threshold steady state min_hr_coverage Minimum heart rate data coverage required quality_control Quality control setting (\"\", \"flag\", \"filter\")","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_ef_from_stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate EF from Stream Data with Steady-State Analysis — calculate_ef_from_stream","text":"Data frame EF calculation results","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Training Load Exposure (ATL, CTL, ACWR) — calculate_exposure","title":"Calculate Training Load Exposure (ATL, CTL, ACWR) — calculate_exposure","text":"Calculates training load metrics like ATL, CTL, ACWR local Strava data.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Training Load Exposure (ATL, CTL, ACWR) — calculate_exposure","text":"","code":"calculate_exposure(   activities_data,   activity_type = c(\"Run\", \"Ride\", \"VirtualRide\", \"VirtualRun\"),   load_metric = \"duration_mins\",   acute_period = 7,   chronic_period = 42,   user_ftp = NULL,   user_max_hr = NULL,   user_resting_hr = NULL,   end_date = NULL )"},{"path":"https://hezhiang.com/Athlytics/reference/calculate_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Training Load Exposure (ATL, CTL, ACWR) — calculate_exposure","text":"activities_data data frame activities load_local_activities(). Must contain columns: date, distance, moving_time, elapsed_time, average_heartrate, average_watts, type, elevation_gain. activity_type Type(s) activities include (e.g., \"Run\", \"Ride\"). Default includes common run/ride types. load_metric Method calculating daily load (e.g., \"duration_mins\", \"distance_km\", \"tss\", \"hrss\"). Default \"duration_mins\". acute_period Days acute load window (e.g., 7). chronic_period Days chronic load window (e.g., 42). Must greater acute_period. user_ftp Required load_metric = \"tss\". Functional Threshold Power. user_max_hr Required load_metric = \"hrss\". maximum heart rate. user_resting_hr Required load_metric = \"hrss\". resting heart rate. end_date Optional. Analysis end date (YYYY-MM-DD string Date). Defaults today. analysis period covers chronic_period days ending date.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Training Load Exposure (ATL, CTL, ACWR) — calculate_exposure","text":"data frame columns: date, daily_load, atl (Acute Load), ctl (Chronic Load), acwr (Acute:Chronic Ratio) analysis period.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_exposure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Training Load Exposure (ATL, CTL, ACWR) — calculate_exposure","text":"Calculates daily load, ATL, CTL, ACWR Strava activities based chosen metric periods. Provides data plot_exposure. Requires extra prior data accurate initial CTL. Requires FTP/HR parameters TSS/HRSS metrics.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Training Load Exposure (ATL, CTL, ACWR) — calculate_exposure","text":"","code":"# Example using simulated data data(athlytics_sample_exposure) print(head(athlytics_sample_exposure)) #> # A tibble: 6 × 5 #>   date       daily_load   atl   ctl  acwr #>   <date>          <dbl> <dbl> <dbl> <dbl> #> 1 2023-07-01       41.4  45.9  40.7  1.13 #> 2 2023-07-02       73.4  47.4  41.6  1.14 #> 3 2023-07-03       24.2  50.6  42.7  1.18 #> 4 2023-07-04       38.8  49.9  43.2  1.15 #> 5 2023-07-05       50.2  48.0  43.7  1.10 #> 6 2023-07-06       69.4  49.7  44.7  1.11  if (FALSE) { # \\dontrun{ # Example using local Strava export data activities <- load_local_activities(\"strava_export_data/activities.csv\")  # Calculate training load for Rides using TSS ride_exposure_tss <- calculate_exposure(   activities_data = activities,   activity_type = \"Ride\",   load_metric = \"tss\",   user_ftp = 280,   acute_period = 7,   chronic_period = 28 ) print(head(ride_exposure_tss))  # Calculate training load for Runs using HRSS run_exposure_hrss <- calculate_exposure(   activities_data = activities,   activity_type = \"Run\",   load_metric = \"hrss\",   user_max_hr = 190,   user_resting_hr = 50 ) print(tail(run_exposure_hrss)) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/calculate_pbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Personal Bests (PBs) from Local Strava Data — calculate_pbs","title":"Calculate Personal Bests (PBs) from Local Strava Data — calculate_pbs","text":"Tracks personal best times standard distances (1k, 5k, 10k, half marathon, marathon) analyzing detailed activity files Strava export data.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_pbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Personal Bests (PBs) from Local Strava Data — calculate_pbs","text":"","code":"calculate_pbs(   activities_data,   export_dir = \"strava_export_data\",   activity_type = \"Run\",   start_date = NULL,   end_date = NULL,   distances_m = c(1000, 5000, 10000, 21097.5, 42195) )"},{"path":"https://hezhiang.com/Athlytics/reference/calculate_pbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Personal Bests (PBs) from Local Strava Data — calculate_pbs","text":"activities_data data frame activities load_local_activities(). Must contain columns: date, type, filename, distance. export_dir Base directory Strava export containing activities folder. Default \"strava_export_data\". activity_type Type activities analyze (typically \"Run\"). Default \"Run\". start_date Optional start date analysis (YYYY-MM-DD). Defaults NULL (dates). end_date Optional end date analysis (YYYY-MM-DD). Defaults NULL (dates). distances_m Target distances meters track. Default: c(1000, 5000, 10000, 21097.5, 42195) 1k, 5k, 10k, half, full marathon.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_pbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Personal Bests (PBs) from Local Strava Data — calculate_pbs","text":"data frame columns: activity_id, activity_date, distance, elapsed_time, moving_time, time_seconds, cumulative_pb_seconds, is_pb, distance_label, time_period","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_pbs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Personal Bests (PBs) from Local Strava Data — calculate_pbs","text":"function analyzes detailed activity files (FIT/TCX/GPX) find fastest efforts specified distances. tracks cumulative personal bests time, showing new PBs set. Note: Requires detailed activity files Strava export. Activities must long enough contain target distance segments.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/calculate_pbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Personal Bests (PBs) from Local Strava Data — calculate_pbs","text":"","code":"# Example using simulated data data(athlytics_sample_pbs) print(head(athlytics_sample_pbs)) #> # A tibble: 6 × 10 #>   activity_id activity_date       distance elapsed_time moving_time time_seconds #>   <chr>       <dttm>                 <dbl>        <dbl>       <dbl>        <dbl> #> 1 activity_1… 2023-03-12 00:00:00     1000         240         235.         240  #> 2 activity_1… 2023-03-19 00:00:00     1000         237.        233.         237. #> 3 activity_1… 2023-03-27 00:00:00     1000         235.        230.         235. #> 4 activity_1… 2023-04-20 00:00:00     1000         232.        227.         232. #> 5 activity_1… 2023-04-27 00:00:00     1000         229.        225.         229. #> 6 activity_1… 2023-04-30 00:00:00     1000         226.        222.         226. #> # ℹ 4 more variables: cumulative_pb_seconds <dbl>, is_pb <lgl>, #> #   distance_label <fct>, time_period <Period>  if (FALSE) { # \\dontrun{ # Load local activities activities <- load_local_activities(\"strava_export_data/activities.csv\")  # Calculate PBs for standard running distances pbs_data <- calculate_pbs(   activities_data = activities,   export_dir = \"strava_export_data\",   activity_type = \"Run\" ) print(head(pbs_data)) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/cohort_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cohort Reference Percentiles — cohort_reference","title":"Calculate Cohort Reference Percentiles — cohort_reference","text":"Calculates reference percentiles metric across cohort athletes, stratified specified grouping variables (e.g., sport, sex, age band).","code":""},{"path":"https://hezhiang.com/Athlytics/reference/cohort_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cohort Reference Percentiles — cohort_reference","text":"","code":"cohort_reference(   data,   metric = \"acwr_smooth\",   by = c(\"sport\"),   probs = c(0.05, 0.25, 0.5, 0.75, 0.95),   min_athletes = 5,   date_col = \"date\" )"},{"path":"https://hezhiang.com/Athlytics/reference/cohort_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cohort Reference Percentiles — cohort_reference","text":"data data frame containing metric values multiple athletes. Must include columns: date, athlete_id, metric column. metric Name metric column calculate percentiles (e.g., \"acwr\", \"acwr_smooth\", \"ef\", \"decoupling\"). Default \"acwr_smooth\". Character vector grouping variables. Options: \"sport\", \"sex\", \"age_band\", \"athlete_id\". Default c(\"sport\"). probs Numeric vector probabilities percentiles (0-1). Default c(0.05, 0.25, 0.50, 0.75, 0.95) 5th, 25th, 50th, 75th, 95th percentiles. min_athletes Minimum number athletes required per group calculate valid percentiles. Default 5. date_col Name date column. Default \"date\".","code":""},{"path":"https://hezhiang.com/Athlytics/reference/cohort_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cohort Reference Percentiles — cohort_reference","text":"long-format data frame columns: date Date ... Grouping variables (specified ) percentile Percentile label (e.g., \"p05\", \"p25\", \"p50\", \"p75\", \"p95\") value Metric value percentile n_athletes Number athletes contributing percentile","code":""},{"path":"https://hezhiang.com/Athlytics/reference/cohort_reference.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Cohort Reference Percentiles — cohort_reference","text":"function creates cohort-level reference bands comparing individual athlete metrics peers. Common use cases: Compare athlete's ACWR trend team averages Identify outliers (athletes outside P5-P95 range) Track team-wide trends time Important: Percentile bands represent population variability, statistical confidence intervals individual values.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/cohort_reference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Cohort Reference Percentiles — cohort_reference","text":"","code":"if (FALSE) { # \\dontrun{ # Load activities for multiple athletes athlete1 <- load_local_activities(\"athlete1_export.zip\") %>%   mutate(athlete_id = \"athlete1\") athlete2 <- load_local_activities(\"athlete2_export.zip\") %>%   mutate(athlete_id = \"athlete2\") athlete3 <- load_local_activities(\"athlete3_export.zip\") %>%   mutate(athlete_id = \"athlete3\")  # Combine data cohort_data <- bind_rows(athlete1, athlete2, athlete3)  # Calculate ACWR for each athlete cohort_acwr <- cohort_data %>%   group_by(athlete_id) %>%   group_modify(~calculate_acwr_ewma(.x))  # Calculate reference percentiles reference <- cohort_reference(   cohort_acwr,   metric = \"acwr_smooth\",   by = c(\"sport\"),   probs = c(0.05, 0.25, 0.5, 0.75, 0.95) )  # Plot individual against cohort plot_with_reference(   individual = cohort_acwr %>% filter(athlete_id == \"athlete1\"),   reference = reference ) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/find_best_effort.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Best Effort for Target Distance — find_best_effort","title":"Find Best Effort for Target Distance — find_best_effort","text":"Find Best Effort Target Distance","code":""},{"path":"https://hezhiang.com/Athlytics/reference/find_best_effort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Best Effort for Target Distance — find_best_effort","text":"","code":"find_best_effort(stream_data, target_distance)"},{"path":"https://hezhiang.com/Athlytics/reference/flag_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Flag Data Quality Issues in Activity Streams — flag_quality","title":"Flag Data Quality Issues in Activity Streams — flag_quality","text":"Detects flags potential data quality issues activity stream data, including HR/power spikes, GPS drift, identifies steady-state segments suitable physiological metrics calculation.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/flag_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flag Data Quality Issues in Activity Streams — flag_quality","text":"","code":"flag_quality(   streams,   sport = \"Run\",   hr_range = c(30, 220),   pw_range = c(0, 1500),   max_run_speed = 7,   max_ride_speed = 25,   max_accel = 3,   max_hr_jump = 10,   max_pw_jump = 300,   min_steady_minutes = 20,   steady_cv_threshold = 8 )"},{"path":"https://hezhiang.com/Athlytics/reference/flag_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flag Data Quality Issues in Activity Streams — flag_quality","text":"streams data frame containing activity stream data time-series measurements. Expected columns: time (seconds), heartrate (bpm), watts (W), velocity_smooth speed (m/s), distance (m). sport Type activity (e.g., \"Run\", \"Ride\"). Default \"Run\". hr_range Valid heart rate range c(min, max). Default c(30, 220). pw_range Valid power range c(min, max). Default c(0, 1500). max_run_speed Maximum plausible running speed m/s. Default 7.0 (≈2:23/km). max_ride_speed Maximum plausible riding speed m/s. Default 25.0 (≈90 km/h). max_accel Maximum plausible acceleration m/s². Default 3.0. max_hr_jump Maximum plausible HR change per second (bpm/s). Default 10. max_pw_jump Maximum plausible power change per second (W/s). Default 300. min_steady_minutes Minimum duration (minutes) steady-state segment. Default 20. steady_cv_threshold Coefficient variation threshold steady-state (\\%). Default 8.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/flag_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flag Data Quality Issues in Activity Streams — flag_quality","text":"data frame identical streams additional flag columns: flag_hr_spike Logical. TRUE HR range excessive jump. flag_pw_spike Logical. TRUE power range excessive jump. flag_gps_drift Logical. TRUE speed acceleration implausible. flag_any Logical. TRUE quality flag raised. is_steady_state Logical. TRUE segment meets steady-state criteria. quality_score Numeric 0-1. Proportion clean data (1 = perfect).","code":""},{"path":"https://hezhiang.com/Athlytics/reference/flag_quality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flag Data Quality Issues in Activity Streams — flag_quality","text":"function performs several quality checks: HR/Power Spikes: Flags values outside physiological ranges sudden jumps (Delta HR > 10 bpm/s, Delta P > 300 W/s). GPS Drift: Flags implausible speeds accelerations based sport type. Steady-State Detection: Identifies segments low variability (CV < 8%) lasting >= 20 minutes, suitable EF/decoupling calculations. function sport-aware adjusts thresholds accordingly. thresholds configurable accommodate different athlete profiles data quality.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/flag_quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flag Data Quality Issues in Activity Streams — flag_quality","text":"","code":"if (FALSE) { # \\dontrun{ # Create sample activity stream data stream_data <- data.frame(   time = seq(0, 3600, by = 1),   heartrate = rnorm(3601, mean = 150, sd = 10),   watts = rnorm(3601, mean = 200, sd = 20),   velocity_smooth = rnorm(3601, mean = 3.5, sd = 0.3) )  # Flag quality issues flagged_data <- flag_quality(stream_data, sport = \"Run\")  # Check summary summary(flagged_data$quality_score) table(flagged_data$flag_any) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/load_local_activities.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Activities from Local Strava Export — load_local_activities","title":"Load Activities from Local Strava Export — load_local_activities","text":"Reads processes activity data local Strava export, supporting direct CSV files compressed ZIP archives. function converts Strava export data format compatible Athlytics analysis functions. Designed work Strava's official bulk data export (Settings > Account > Download Delete Account > Get Started).","code":""},{"path":"https://hezhiang.com/Athlytics/reference/load_local_activities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Activities from Local Strava Export — load_local_activities","text":"","code":"load_local_activities(   path = \"strava_export_data/activities.csv\",   start_date = NULL,   end_date = NULL,   activity_types = NULL )"},{"path":"https://hezhiang.com/Athlytics/reference/load_local_activities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Activities from Local Strava Export — load_local_activities","text":"path Path activities.csv file .zip archive Strava export. Supports CSV ZIP formats. .zip file provided, function automatically extract read activities.csv file within archive. Default \"strava_export_data/activities.csv\". start_date Optional. Start date (YYYY-MM-DD Date/POSIXct) filtering activities. Defaults NULL (filtering). end_date Optional. End date (YYYY-MM-DD Date/POSIXct) filtering activities. Defaults NULL (filtering). activity_types Optional. Character vector activity types include (e.g., c(\"Run\", \"Ride\")). Defaults NULL (include types).","code":""},{"path":"https://hezhiang.com/Athlytics/reference/load_local_activities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Activities from Local Strava Export — load_local_activities","text":"tibble activity data standardized column names compatible Athlytics functions. Key columns include: id: Activity ID (numeric) name: Activity name type: Activity type (Run, Ride, etc.) start_date_local: Activity start datetime (POSIXct) date: Activity date (Date) distance: Distance meters (numeric) moving_time: Moving time seconds (integer) elapsed_time: Elapsed time seconds (integer) average_heartrate: Average heart rate (numeric) average_watts: Average power watts (numeric) elevation_gain: Elevation gain meters (numeric)","code":""},{"path":"https://hezhiang.com/Athlytics/reference/load_local_activities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Activities from Local Strava Export — load_local_activities","text":"function reads activities.csv file Strava data export transforms data match structure expected Athlytics analysis functions. transformation includes: Converting column names match API format Parsing dates POSIXct format Converting distances meters Converting times seconds Filtering date range activity type specified Privacy Note: function processes local export data connect internet. Ensure permission analyze data follow applicable privacy regulations using data research purposes.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/load_local_activities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Activities from Local Strava Export — load_local_activities","text":"","code":"if (FALSE) { # \\dontrun{ # Load all activities from local CSV activities <- load_local_activities(\"strava_export_data/activities.csv\")  # Load directly from ZIP archive (no need to extract manually!) activities <- load_local_activities(\"export_12345678.zip\")  # Load only running activities from 2023 activities <- load_local_activities(   path = \"export_12345678.zip\",   start_date = \"2023-01-01\",   end_date = \"2023-12-31\",   activity_types = \"Run\" )  # Use with Athlytics functions acwr_data <- calculate_acwr(activities, load_metric = \"distance_km\") plot_acwr(acwr_data, highlight_zones = TRUE)  # Multi-metric analysis ef_data <- calculate_ef(activities, ef_metric = \"pace_hr\") plot_ef(ef_data, add_trend_line = TRUE) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/parse_activity_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Activity File (FIT, TCX, or GPX) — parse_activity_file","title":"Parse Activity File (FIT, TCX, or GPX) — parse_activity_file","text":"Internal function parse activity files Strava export data. Supports FIT, TCX, GPX formats (including .gz compressed files).","code":""},{"path":"https://hezhiang.com/Athlytics/reference/parse_activity_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Activity File (FIT, TCX, or GPX) — parse_activity_file","text":"","code":"parse_activity_file(file_path, export_dir = NULL)"},{"path":"https://hezhiang.com/Athlytics/reference/parse_activity_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Activity File (FIT, TCX, or GPX) — parse_activity_file","text":"file_path Path activity file (can .fit, .tcx, .gpx, .gz compressed) export_dir Base directory Strava export (resolving relative paths)","code":""},{"path":"https://hezhiang.com/Athlytics/reference/parse_activity_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Activity File (FIT, TCX, or GPX) — parse_activity_file","text":"data frame columns: time, latitude, longitude, elevation, heart_rate, power, cadence, speed (optional depending file content)","code":""},{"path":"https://hezhiang.com/Athlytics/reference/parse_fit_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse FIT file — parse_fit_file","title":"Parse FIT file — parse_fit_file","text":"Parse FIT file","code":""},{"path":"https://hezhiang.com/Athlytics/reference/parse_fit_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse FIT file — parse_fit_file","text":"","code":"parse_fit_file(file_path)"},{"path":"https://hezhiang.com/Athlytics/reference/parse_gpx_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse GPX file — parse_gpx_file","title":"Parse GPX file — parse_gpx_file","text":"Parse GPX file","code":""},{"path":"https://hezhiang.com/Athlytics/reference/parse_gpx_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse GPX file — parse_gpx_file","text":"","code":"parse_gpx_file(file_path)"},{"path":"https://hezhiang.com/Athlytics/reference/parse_tcx_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse TCX file — parse_tcx_file","title":"Parse TCX file — parse_tcx_file","text":"Parse TCX file","code":""},{"path":"https://hezhiang.com/Athlytics/reference/parse_tcx_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse TCX file — parse_tcx_file","text":"","code":"parse_tcx_file(file_path)"},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ACWR Trend — plot_acwr","title":"Plot ACWR Trend — plot_acwr","text":"Visualizes Acute:Chronic Workload Ratio (ACWR) trend time.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ACWR Trend — plot_acwr","text":"","code":"plot_acwr(   data,   activity_type = NULL,   load_metric = \"duration_mins\",   acute_period = 7,   chronic_period = 28,   start_date = NULL,   end_date = NULL,   user_ftp = NULL,   user_max_hr = NULL,   user_resting_hr = NULL,   smoothing_period = 7,   highlight_zones = TRUE,   acwr_df = NULL,   group_var = NULL,   group_colors = NULL )"},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ACWR Trend — plot_acwr","text":"data Recommended: Pass pre-calculated data via acwr_df (local export preferred). data frame calculate_acwr() activities data load_local_activities(). activity_type Type(s) activities analyze (e.g., \"Run\", \"Ride\"). load_metric Method calculating daily load (e.g., \"duration_mins\", \"distance_km\", \"tss\", \"hrss\"). acute_period Days acute load window (e.g., 7). chronic_period Days chronic load window (e.g., 28). Must greater acute_period. start_date Optional. Analysis start date (YYYY-MM-DD string Date). Defaults ~1 year ago. end_date Optional. Analysis end date (YYYY-MM-DD string Date). Defaults today. user_ftp Required load_metric = \"tss\" acwr_df provided. Functional Threshold Power. user_max_hr Required load_metric = \"hrss\" acwr_df provided. maximum heart rate. user_resting_hr Required load_metric = \"hrss\" acwr_df provided. resting heart rate. smoothing_period Days smoothing ACWR using rolling mean (e.g., 7). Default 7. highlight_zones Logical, whether highlight different ACWR zones (e.g., sweet spot, high risk) plot. Default TRUE. acwr_df Recommended. pre-calculated data frame calculate_acwr() calculate_acwr_ewma(). provided, analysis uses local data (API calls). group_var Optional. Column name grouping/faceting (e.g., \"athlete_id\"). group_colors Optional. Named vector colors groups.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ACWR Trend — plot_acwr","text":"ggplot object showing ACWR trend.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot ACWR Trend — plot_acwr","text":"Plots ACWR trend time. Best practice: Use load_local_activities() + calculate_acwr() + function. ACWR calculated acute load / chronic load. ratio 0.8-1.3 often considered \"sweet spot\".","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ACWR Trend — plot_acwr","text":"","code":"# Example using pre-calculated sample data data(\"athlytics_sample_acwr\", package = \"Athlytics\") p <- plot_acwr(athlytics_sample_acwr) #> Generating plot... print(p)   if (FALSE) { # \\dontrun{ # Example using local Strava export data activities <- load_local_activities(\"strava_export_data/activities.csv\")  # Plot ACWR trend for Runs (using duration as load metric) plot_acwr(data = activities,           activity_type = \"Run\",           load_metric = \"duration_mins\",           acute_period = 7,           chronic_period = 28)  # Plot ACWR trend for Rides (using TSS as load metric) plot_acwr(data = activities,           activity_type = \"Ride\",           load_metric = \"tss\",           user_ftp = 280)  # FTP value is required } # }"},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare RA and EWMA Methods Side-by-Side — plot_acwr_comparison","title":"Compare RA and EWMA Methods Side-by-Side — plot_acwr_comparison","text":"Creates faceted plot comparing Rolling Average EWMA ACWR calculations.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare RA and EWMA Methods Side-by-Side — plot_acwr_comparison","text":"","code":"plot_acwr_comparison(   acwr_ra,   acwr_ewma,   title = \"ACWR Method Comparison: RA vs EWMA\" )"},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare RA and EWMA Methods Side-by-Side — plot_acwr_comparison","text":"acwr_ra data frame calculate_acwr_ewma(..., method = \"ra\"). acwr_ewma data frame calculate_acwr_ewma(..., method = \"ewma\"). title Plot title. Default \"ACWR Method Comparison: RA vs EWMA\".","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare RA and EWMA Methods Side-by-Side — plot_acwr_comparison","text":"ggplot object faceted comparison.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare RA and EWMA Methods Side-by-Side — plot_acwr_comparison","text":"","code":"if (FALSE) { # \\dontrun{ activities <- load_local_activities(\"export.zip\")  acwr_ra <- calculate_acwr_ewma(activities, method = \"ra\") acwr_ewma <- calculate_acwr_ewma(activities, method = \"ewma\")  plot_acwr_comparison(acwr_ra, acwr_ewma) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr_enhanced.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced ACWR Plot with Confidence Bands and Reference — plot_acwr_enhanced","title":"Enhanced ACWR Plot with Confidence Bands and Reference — plot_acwr_enhanced","text":"Creates comprehensive ACWR visualization optional confidence bands cohort reference percentiles.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr_enhanced.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced ACWR Plot with Confidence Bands and Reference — plot_acwr_enhanced","text":"","code":"plot_acwr_enhanced(   acwr_data,   reference_data = NULL,   show_ci = TRUE,   show_reference = TRUE,   reference_bands = c(\"p25_p75\", \"p05_p95\", \"p50\"),   highlight_zones = TRUE,   title = NULL,   subtitle = NULL,   method_label = NULL )"},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr_enhanced.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced ACWR Plot with Confidence Bands and Reference — plot_acwr_enhanced","text":"acwr_data data frame calculate_acwr_ewma() containing ACWR values. reference_data Optional. data frame cohort_reference() adding cohort reference bands. show_ci Logical. Whether show confidence bands (available data). Default TRUE. show_reference Logical. Whether show cohort reference bands (provided). Default TRUE. reference_bands reference bands show. Default c(\"p25_p75\", \"p05_p95\", \"p50\"). highlight_zones Logical. Whether highlight ACWR risk zones. Default TRUE. title Plot title. Default NULL (auto-generated). subtitle Plot subtitle. Default NULL (auto-generated). method_label Optional label method used (e.g., \"RA\", \"EWMA\"). Default NULL.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr_enhanced.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced ACWR Plot with Confidence Bands and Reference — plot_acwr_enhanced","text":"ggplot object.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr_enhanced.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Enhanced ACWR Plot with Confidence Bands and Reference — plot_acwr_enhanced","text":"enhanced plot function combines multiple visualization layers: Risk zone shading (sweet spot: 0.8-1.3, caution: 1.3-1.5, high risk: >1.5) Cohort reference percentile bands (provided) Bootstrap confidence bands (available data) Individual ACWR trend line layering order (bottom top): Risk zones (background) Cohort reference bands (P5-P95, P25-P75) Confidence intervals (individual uncertainty) ACWR line (individual trend)","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_acwr_enhanced.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enhanced ACWR Plot with Confidence Bands and Reference — plot_acwr_enhanced","text":"","code":"if (FALSE) { # \\dontrun{ # Load activities activities <- load_local_activities(\"export.zip\")  # Calculate ACWR with EWMA and confidence bands acwr <- calculate_acwr_ewma(   activities,   method = \"ewma\",   ci = TRUE,   B = 200 )  # Basic enhanced plot plot_acwr_enhanced(acwr)  # With cohort reference reference <- cohort_reference(cohort_data, metric = \"acwr_smooth\") plot_acwr_enhanced(acwr, reference_data = reference) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/plot_decoupling.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Aerobic Decoupling Trend — plot_decoupling","title":"Plot Aerobic Decoupling Trend — plot_decoupling","text":"Visualizes trend aerobic decoupling time.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_decoupling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Aerobic Decoupling Trend — plot_decoupling","text":"","code":"plot_decoupling(   data,   activity_type = c(\"Run\", \"Ride\"),   decouple_metric = c(\"pace_hr\", \"power_hr\"),   start_date = NULL,   end_date = NULL,   min_duration_mins = 45,   add_trend_line = TRUE,   smoothing_method = \"loess\",   decoupling_df = NULL )"},{"path":"https://hezhiang.com/Athlytics/reference/plot_decoupling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Aerobic Decoupling Trend — plot_decoupling","text":"data Recommended: Pass pre-calculated data via decoupling_df (local export preferred). data frame calculate_decoupling() activities data load_local_activities(). activity_type Type(s) activities analyze (e.g., \"Run\", \"Ride\"). decouple_metric Metric basis: \"pace_hr\" \"power_hr\". start_date Optional. Analysis start date (YYYY-MM-DD string Date). Defaults ~1 year ago. end_date Optional. Analysis end date (YYYY-MM-DD string Date). Defaults today. min_duration_mins Minimum activity duration (minutes) include. Default 45. add_trend_line Add smoothed trend line (geom_smooth)? Default TRUE. smoothing_method Smoothing method trend line (e.g., \"loess\", \"lm\"). Default \"loess\". decoupling_df Recommended. pre-calculated data frame calculate_decoupling(). provided, analysis uses local data (API calls). Must contain 'date' 'decoupling' columns.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_decoupling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Aerobic Decoupling Trend — plot_decoupling","text":"ggplot object showing decoupling trend.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_decoupling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Aerobic Decoupling Trend — plot_decoupling","text":"Plots aerobic decoupling trend time. Recommended workflow: Use local data via decoupling_df. Plots decoupling percentage ((EF_1st_half - EF_2nd_half) / EF_1st_half * 100). Positive values mean HR drifted relative output. 5\\% threshold line often used reference. Best practice: Use load_local_activities() + calculate_decoupling() + function.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_decoupling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Aerobic Decoupling Trend — plot_decoupling","text":"","code":"# Example using pre-calculated sample data data(\"athlytics_sample_decoupling\", package = \"Athlytics\") p <- plot_decoupling(decoupling_df = athlytics_sample_decoupling) #> Generating plot... print(p) #> `geom_smooth()` using formula = 'y ~ x'   if (FALSE) { # \\dontrun{ # Example using local Strava export data activities <- load_local_activities(\"strava_export_data/activities.csv\")  # Example 1: Plot Decoupling trend for Runs (last 6 months) decoupling_runs_6mo <- calculate_decoupling(     activities_data = activities,     export_dir = \"strava_export_data\",     activity_type = \"Run\",     decouple_metric = \"pace_hr\",     start_date = Sys.Date() - months(6) ) plot_decoupling(decoupling_runs_6mo)  # Example 2: Plot Decoupling trend for Rides decoupling_rides <- calculate_decoupling(   activities_data = activities,   export_dir = \"strava_export_data\",   activity_type = \"Ride\",   decouple_metric = \"power_hr\" ) plot_decoupling(decoupling_rides)  # Example 3: Plot Decoupling trend for multiple Run types (no trend line) decoupling_multi_run <- calculate_decoupling(   activities_data = activities,   export_dir = \"strava_export_data\",   activity_type = c(\"Run\", \"VirtualRun\"),   decouple_metric = \"pace_hr\" ) plot_decoupling(decoupling_multi_run, add_trend_line = FALSE) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/plot_ef.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Efficiency Factor (EF) Trend — plot_ef","title":"Plot Efficiency Factor (EF) Trend — plot_ef","text":"Visualizes trend Efficiency Factor (EF) time.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_ef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Efficiency Factor (EF) Trend — plot_ef","text":"","code":"plot_ef(   data,   activity_type = c(\"Run\", \"Ride\"),   ef_metric = c(\"pace_hr\", \"power_hr\"),   start_date = NULL,   end_date = NULL,   min_duration_mins = 20,   add_trend_line = TRUE,   smoothing_method = \"loess\",   ef_df = NULL,   group_var = NULL,   group_colors = NULL )"},{"path":"https://hezhiang.com/Athlytics/reference/plot_ef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Efficiency Factor (EF) Trend — plot_ef","text":"data Recommended: Pass pre-calculated data via ef_df (local export preferred). data frame calculate_ef() activities data load_local_activities(). activity_type Type(s) activities analyze (e.g., \"Run\", \"Ride\"). ef_metric Metric calculate: \"pace_hr\" (Speed/HR) \"power_hr\" (Power/HR). start_date Optional. Analysis start date (YYYY-MM-DD string Date). Defaults ~1 year ago. end_date Optional. Analysis end date (YYYY-MM-DD string Date). Defaults today. min_duration_mins Minimum activity duration (minutes) include. Default 20. add_trend_line Add smoothed trend line (geom_smooth)? Default TRUE. smoothing_method Smoothing method trend line (e.g., \"loess\", \"lm\"). Default \"loess\". ef_df Recommended. pre-calculated data frame calculate_ef(). provided, analysis uses local data (API calls). group_var Optional. Column name grouping/faceting (e.g., \"athlete_id\"). group_colors Optional. Named vector colors groups.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_ef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Efficiency Factor (EF) Trend — plot_ef","text":"ggplot object showing EF trend.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_ef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Efficiency Factor (EF) Trend — plot_ef","text":"Plots Efficiency Factor (EF) trend time. Recommended workflow: Use local data via ef_df. Plots EF (output/HR based activity averages). upward trend often indicates improved aerobic fitness. Points colored activity type. Best practice: Use load_local_activities() + calculate_ef() + function.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_ef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Efficiency Factor (EF) Trend — plot_ef","text":"","code":"# Example using pre-calculated sample data data(\"athlytics_sample_ef\", package = \"Athlytics\") p <- plot_ef(athlytics_sample_ef) #> Generating plot... print(p) #> `geom_smooth()` using formula = 'y ~ x'   if (FALSE) { # \\dontrun{ # Example using local Strava export data activities <- load_local_activities(\"strava_export_data/activities.csv\")  # Plot Pace/HR EF trend for Runs (last 6 months) plot_ef(data = activities,         activity_type = \"Run\",         ef_metric = \"pace_hr\",         start_date = Sys.Date() - months(6))  # Plot Power/HR EF trend for Rides plot_ef(data = activities,         activity_type = \"Ride\",         ef_metric = \"power_hr\")  # Plot Pace/HR EF trend for multiple Run types (no trend line) plot_ef(data = activities,         activity_type = c(\"Run\", \"VirtualRun\"),         ef_metric = \"pace_hr\",         add_trend_line = FALSE) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/plot_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Training Load Exposure (ATL vs CTL) — plot_exposure","title":"Plot Training Load Exposure (ATL vs CTL) — plot_exposure","text":"Visualizes relationship Acute Chronic Training Load.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Training Load Exposure (ATL vs CTL) — plot_exposure","text":"","code":"plot_exposure(   data,   activity_type = c(\"Run\", \"Ride\", \"VirtualRide\", \"VirtualRun\"),   load_metric = \"duration_mins\",   acute_period = 7,   chronic_period = 42,   user_ftp = NULL,   user_max_hr = NULL,   user_resting_hr = NULL,   end_date = NULL,   risk_zones = TRUE,   exposure_df = NULL )"},{"path":"https://hezhiang.com/Athlytics/reference/plot_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Training Load Exposure (ATL vs CTL) — plot_exposure","text":"data data frame load_local_activities(). Required unless exposure_df provided. activity_type Type(s) activities include (e.g., \"Run\", \"Ride\"). Default uses common types. load_metric Method calculating daily load (e.g., \"duration_mins\", \"tss\", \"hrss\"). Default \"duration_mins\". See calculate_exposure details approximate TSS/HRSS calculations. acute_period Days acute load window (e.g., 7). chronic_period Days chronic load window (e.g., 42). Must > acute_period. user_ftp Required load_metric = \"tss\". FTP. user_max_hr Required load_metric = \"hrss\". max HR. user_resting_hr Required load_metric = \"hrss\". resting HR. end_date Optional. Analysis end date (YYYY-MM-DD string Date). Defaults today. risk_zones Add background shading typical ACWR risk zones? Default TRUE. exposure_df Optional. pre-calculated data frame calculate_exposure. provided, data calculation parameters ignored. Must contain date, atl, ctl (acwr risk_zones = TRUE).","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Training Load Exposure (ATL vs CTL) — plot_exposure","text":"ggplot object showing ATL vs CTL.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_exposure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Training Load Exposure (ATL vs CTL) — plot_exposure","text":"Plots ATL vs CTL, optionally showing risk zones based ACWR. Uses pre-calculated data calls calculate_exposure. Visualizes training state plotting ATL vs CTL (related PMC charts). Points colored date, latest point highlighted (red triangle). Optional risk zones (based ACWR thresholds ~0.8, 1.3, 1.5) can shaded. exposure_df provided, calls calculate_exposure first.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Training Load Exposure (ATL vs CTL) — plot_exposure","text":"","code":"# Example using simulated data data(Athlytics_sample_data) #> Warning: data set ‘Athlytics_sample_data’ not found # Ensure exposure_df is named and other necessary parameters like activity_type are provided p <- plot_exposure(exposure_df = athlytics_sample_exposure, activity_type = \"Run\") #> Generating plot... print(p)   if (FALSE) { # \\dontrun{ # Example using local Strava export data activities <- load_local_activities(\"strava_export_data/activities.csv\")  # Plot Exposure trend for Runs (last 6 months) plot_exposure(data = activities,               activity_type = \"Run\",               end_date = Sys.Date(),               user_ftp = 280) # Example, if load_metric = \"tss\"  # Plot Exposure trend for Rides plot_exposure(data = activities,               activity_type = \"Ride\",               user_ftp = 280) # Example, provide if load_metric = \"tss\"  # Plot Exposure trend for multiple Run types (risk_zones = FALSE for this example) plot_exposure(data = activities,               activity_type = c(\"Run\", \"VirtualRun\"),               risk_zones = FALSE,               user_ftp = 280) # Example, provide if load_metric = \"tss\" } # }"},{"path":"https://hezhiang.com/Athlytics/reference/plot_pbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Personal Best (PB) Trends — plot_pbs","title":"Plot Personal Best (PB) Trends — plot_pbs","text":"Visualizes trend personal best times specific running distances.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_pbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Personal Best (PB) Trends — plot_pbs","text":"","code":"plot_pbs(   data,   activity_type = \"Run\",   distance_meters,   max_activities = 500,   date_range = NULL,   add_trend_line = TRUE,   pbs_df = NULL )"},{"path":"https://hezhiang.com/Athlytics/reference/plot_pbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Personal Best (PB) Trends — plot_pbs","text":"data Recommended: Pass pre-calculated data via pbs_df (local export preferred). data frame calculate_pbs() activities data load_local_activities(). activity_type Type(s) activities search (e.g., \"Run\"). Default \"Run\". distance_meters Numeric vector distances (meters) plot PBs (e.g., c(1000, 5000)). Relies Strava's best_efforts data. max_activities Max number recent activities check. Default 500. Reduce speed. date_range Optional. Filter activities date c(\"YYYY-MM-DD\", \"YYYY-MM-DD\"). add_trend_line Logical. Whether add trend line plot. Default TRUE. pbs_df Recommended. pre-calculated data frame calculate_pbs(). provided, analysis uses local data (API calls).","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_pbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Personal Best (PB) Trends — plot_pbs","text":"ggplot object showing PB trends, faceted distance multiple plotted.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_pbs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Personal Best (PB) Trends — plot_pbs","text":"Plots trend best efforts specified distances, highlighting new PBs. Recommended workflow: Use local data via pbs_df. Visualizes data calculate_pbs. Points show best efforts; solid points mark new PBs. Y-axis MM:SS. Best practice: Use load_local_activities() + calculate_pbs() + function. Legacy API mode maintained backward compatibility .","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_pbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Personal Best (PB) Trends — plot_pbs","text":"","code":"# Example using simulated data data(athlytics_sample_pbs) # athlytics_sample_pbs should contain the PBs to be plotted if (!is.null(athlytics_sample_pbs) && nrow(athlytics_sample_pbs) > 0) {   sample_pbs_for_plot <- athlytics_sample_pbs      # Ensure the date column is named 'activity_date' and is of Date type for plot_pbs   if (\"date\" %in% names(sample_pbs_for_plot) && !\"activity_date\" %in% names(sample_pbs_for_plot)) {     names(sample_pbs_for_plot)[names(sample_pbs_for_plot) == \"date\"] <- \"activity_date\"   }   if (\"activity_date\" %in% names(sample_pbs_for_plot)) {     sample_pbs_for_plot$activity_date <- as.Date(sample_pbs_for_plot$activity_date)   } else {     message(\"Relevant date column not found in sample PBs for example.\")   }      # plot_pbs requires distance_meters. Extract from sample data.   req_dist_meters <- NULL   if (\"distance\" %in% names(sample_pbs_for_plot)) {     req_dist_meters <- unique(sample_pbs_for_plot$distance)   } else if (\"distance_target_m\" %in% names(sample_pbs_for_plot)) {     req_dist_meters <- unique(sample_pbs_for_plot$distance_target_m)   }      can_plot <- \"activity_date\" %in% names(sample_pbs_for_plot) &&                !is.null(req_dist_meters) && length(req_dist_meters) > 0    if (can_plot) {     p <- plot_pbs(pbs_df = sample_pbs_for_plot, activity_type = \"Run\",                    distance_meters = req_dist_meters)     print(p)   } else {     message(\"Sample PBs data lacks required date or distance info for example.\")   } } else {   message(\"athlytics_sample_pbs is empty or not found, skipping example plot.\") } #> Generating plot... #> `geom_smooth()` using formula = 'y ~ x'   if (FALSE) { # \\dontrun{ # Example using local Strava export data activities <- load_local_activities(\"strava_export_data/activities.csv\")  # Plot PBS trend for Runs (last 6 months) pb_data_run <- calculate_pbs(activities_data = activities,                               activity_type = \"Run\",                               distance_meters = c(1000,5000,10000),                               date_range = c(format(Sys.Date() - months(6)),                                           format(Sys.Date()))) if(nrow(pb_data_run) > 0) {   plot_pbs(pbs_df = pb_data_run, distance_meters = c(1000,5000,10000)) }  # Plot PBS trend for Rides (if applicable, though PBs are mainly for Runs) pb_data_ride <- calculate_pbs(activities_data = activities,                                 activity_type = \"Ride\",                                 distance_meters = c(10000, 20000)) if(nrow(pb_data_ride) > 0) {    plot_pbs(pbs_df = pb_data_ride, distance_meters = c(10000, 20000)) }  # Plot PBS trend for multiple Run types (no trend line) pb_data_multi <- calculate_pbs(activities_data = activities,                                 activity_type = c(\"Run\", \"VirtualRun\"),                                 distance_meters = c(1000,5000)) if(nrow(pb_data_multi) > 0) {   plot_pbs(pbs_df = pb_data_multi, distance_meters = c(1000,5000),             add_trend_line = FALSE) } } # }"},{"path":"https://hezhiang.com/Athlytics/reference/plot_with_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Individual Metric with Cohort Reference — plot_with_reference","title":"Plot Individual Metric with Cohort Reference — plot_with_reference","text":"Creates complete plot showing individual's metric trend cohort reference percentile bands.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_with_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Individual Metric with Cohort Reference — plot_with_reference","text":"","code":"plot_with_reference(   individual,   reference,   metric = \"acwr_smooth\",   date_col = \"date\",   title = NULL,   bands = c(\"p25_p75\", \"p05_p95\", \"p50\") )"},{"path":"https://hezhiang.com/Athlytics/reference/plot_with_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Individual Metric with Cohort Reference — plot_with_reference","text":"individual data frame individual athlete data (calculate_acwr, etc.) reference data frame cohort_reference(). metric Name metric plot. Default \"acwr_smooth\". date_col Name date column. Default \"date\". title Plot title. Default NULL (auto-generated). bands reference bands show. Default c(\"p25_p75\", \"p05_p95\", \"p50\").","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_with_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Individual Metric with Cohort Reference — plot_with_reference","text":"ggplot object.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/plot_with_reference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Individual Metric with Cohort Reference — plot_with_reference","text":"","code":"if (FALSE) { # \\dontrun{ plot_with_reference(   individual = athlete_acwr,   reference = cohort_ref,   metric = \"acwr_smooth\" ) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/quality_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Quality Summary Statistics — quality_summary","title":"Get Quality Summary Statistics — quality_summary","text":"Provides summary quality flags steady-state segments.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/quality_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Quality Summary Statistics — quality_summary","text":"","code":"quality_summary(flagged_streams)"},{"path":"https://hezhiang.com/Athlytics/reference/quality_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Quality Summary Statistics — quality_summary","text":"flagged_streams data frame returned flag_quality().","code":""},{"path":"https://hezhiang.com/Athlytics/reference/quality_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Quality Summary Statistics — quality_summary","text":"list summary statistics: total_points Total number data points flagged_points Number flagged points flagged_pct Percentage flagged points steady_state_points Number steady-state points steady_state_pct Percentage steady-state quality_score Overall quality score (0-1) hr_spike_pct Percentage HR spikes pw_spike_pct Percentage power spikes gps_drift_pct Percentage GPS drift","code":""},{"path":"https://hezhiang.com/Athlytics/reference/quality_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Quality Summary Statistics — quality_summary","text":"","code":"if (FALSE) { # \\dontrun{ flagged_data <- flag_quality(stream_data) quality_summary(flagged_data) } # }"},{"path":"https://hezhiang.com/Athlytics/reference/scale_athlytics.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Color Palette to ggplot — scale_athlytics","title":"Apply Color Palette to ggplot — scale_athlytics","text":"Helper function apply Athlytics color palettes existing plots.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/scale_athlytics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Color Palette to ggplot — scale_athlytics","text":"","code":"scale_athlytics(palette_name = \"nature\", type = \"color\")"},{"path":"https://hezhiang.com/Athlytics/reference/scale_athlytics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Color Palette to ggplot — scale_athlytics","text":"palette_name Name palette: \"nature\", \"academic\", \"vibrant\", \"science\", \"cell\" type Either \"color\" \"fill\"","code":""},{"path":"https://hezhiang.com/Athlytics/reference/theme_athlytics.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Athlytics Theme — theme_athlytics","title":"Get Athlytics Theme — theme_athlytics","text":"Publication-ready ggplot2 theme sensible defaults scientific figures.","code":""},{"path":"https://hezhiang.com/Athlytics/reference/theme_athlytics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Athlytics Theme — theme_athlytics","text":"","code":"theme_athlytics(base_size = 12, base_family = \"\")"},{"path":"https://hezhiang.com/Athlytics/reference/theme_athlytics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Athlytics Theme — theme_athlytics","text":"base_size Base font size (default: 12) base_family Font family (default: \"\")","code":""},{"path":"https://hezhiang.com/Athlytics/news/index.html","id":"athlytics-100","dir":"Changelog","previous_headings":"","what":"Athlytics 1.0.0","title":"Athlytics 1.0.0","text":"major release transitions Strava API local data export processing, prioritizing user privacy data ownership eliminating API rate limits authentication requirements.","code":""},{"path":"https://hezhiang.com/Athlytics/news/index.html","id":"breaking-changes--new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes & New Features","title":"Athlytics 1.0.0","text":"New load_local_activities() function supports direct ZIP file loading (manual extraction needed) Removed API dependencies authentication requirements data processing happens locally - cloud services involved Added detailed parameter explanations recommended values Included interpretation guidelines typical value ranges Added algorithm descriptions best practices Expanded academic references cross-function links Enhanced calculate_acwr(), calculate_ef(), calculate_decoupling() documentation Better documentation cohort_reference() multi-athlete workflows Examples updated show intervention/control group comparisons Proper use group_modify() batch processing Updated code examples reflect local data processing workflow Corrected function parameter names throughout (e.g., activities_df → activities_data) Added installation guidance emphasizing GitHub v1.0.0 latest version Removed outdated API-related content","code":""},{"path":"https://hezhiang.com/Athlytics/news/index.html","id":"academic-paper-1-0-0","dir":"Changelog","previous_headings":"","what":"Academic Paper","title":"Athlytics 1.0.0","text":"Detailed comparison related R packages (rStrava, trackeR, activatr, FITfileR, ACWR, injurytools) Updated methodology reflect local data processing approach Enhanced reproducible examples using local exports","code":""},{"path":"https://hezhiang.com/Athlytics/news/index.html","id":"technical-improvements-1-0-0","dir":"Changelog","previous_headings":"","what":"Technical Improvements","title":"Athlytics 1.0.0","text":"Fixed encoding issues BibTeX references Updated .gitignore track README.md paper/ directory Synchronized documentation actual function implementations Improved pkgdown website generation","code":""},{"path":"https://hezhiang.com/Athlytics/news/index.html","id":"migration-guide-1-0-0","dir":"Changelog","previous_headings":"","what":"Migration Guide","title":"Athlytics 1.0.0","text":"users upgrading 0.1.x: Download Strava bulk data export (Settings > Account > Download Request) Replace fetch_strava_activities() calls load_local_activities(\"export.zip\") Update function calls: activities_df → activities_data, plot_*() now accepts data directly Remove Strava API authentication code","code":""},{"path":"https://hezhiang.com/Athlytics/news/index.html","id":"athlytics-012","dir":"Changelog","previous_headings":"","what":"Athlytics 0.1.2","title":"Athlytics 0.1.2","text":"CRAN release: 2025-05-16 CRAN Resubmission: Carefully addressed feedback CRAN making detailed updates modifications package resubmission. primarily involved refining examples (e.g., consistently using \\dontrun{} advised) ensuring metadata files meet CRAN standards. Testing: Focused increasing test coverage towards goal 85% across package. Integrated Codecov ongoing coverage monitoring. Bug Fixes","code":""},{"path":[]},{"path":"https://hezhiang.com/Athlytics/news/index.html","id":"core-improvement-enhanced-reliability--testing-with-simulated-data-0-1-1","dir":"Changelog","previous_headings":"","what":"Core Improvement: Enhanced Reliability & Testing with Simulated Data","title":"Athlytics 0.1.1","text":"significant update enhances package reliability ease use integrating athlytics_sample_data. enables examples run offline ensures core functionalities undergone rigorous, reproducible testing.","code":""},{"path":"https://hezhiang.com/Athlytics/news/index.html","id":"key-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Key Changes","title":"Athlytics 0.1.1","text":"Examples & Vignettes: Roxygen examples key vignette examples now primarily use athlytics_sample_data offline execution clarity. Network-dependent examples clearly separated \\donttest{} blocks. Test Suite: Fundamentally refactored test suite extensively use athlytics_sample_data mockery, improving test robustness parameter coverage. Strengthened Package Quality & Compliance: Undertook thorough package validation, leading key enhancements overall robustness adherence R packaging standards. involved: ensuring function examples correct reliably executable (notably addressing strava_oauth(...) scenarios offline/testing contexts); providing accurate refined documentation data objects R/data.R; fixing Roxygen import directives precise namespace definition; improving help file readability Rd line width adjustments; optimizing package data loading adding LazyData: true DESCRIPTION. Documentation: Minor improvements documentation clarity consistency (e.g., date formatting plots, explicit naming data frame arguments examples).","code":""},{"path":[]},{"path":"https://hezhiang.com/Athlytics/news/index.html","id":"major-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"Athlytics 0.1.0","text":"Decoupling Calculation: Switched rStrava::get_activity_streams direct Strava API calls using httr jsonlite fetching activity streams calculate_decoupling. aims resolve previous errors might impact performance rate limiting.","code":""},{"path":"https://hezhiang.com/Athlytics/news/index.html","id":"bug-fixes--improvements-0-1-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes & Improvements","title":"Athlytics 0.1.0","text":"Fixed calculate_acwr error (condition length > 1) forcing evaluation dplyr pipe. Corrected plot_pbs usage examples test scripts include required distance_meters argument. Added missing dependencies (httr, jsonlite) DESCRIPTION file. Improved error handling messages several functions. Simplified Roxygen documentation core functions. Updated README examples descriptions clarity consistency code.","code":""},{"path":"https://hezhiang.com/Athlytics/news/index.html","id":"initial-release-0-1-0","dir":"Changelog","previous_headings":"","what":"Initial Release","title":"Athlytics 0.1.0","text":"Initial release. Load Exposure (Acute vs. Chronic Load) ACWR Trend Efficiency Factor Trend Personal Bests (PBs) Decoupling Trend Added Strava authentication helper based rStrava.","code":""}]
