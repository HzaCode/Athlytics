on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::covr, any::devtools
          needs: check

      - name: Find R package tarball
        id: find_tarball
        run: |
          TARBALL_NAME=$(ls Athlytics*.tar.gz 2>/dev/null | head -n 1)
          if [ -z "$TARBALL_NAME" ]; then
            TARBALL_NAME=$(ls *.tar.gz 2>/dev/null | head -n 1)
          fi
          if [ -z "$TARBALL_NAME" ]; then
            echo "Error: No .tar.gz file found in the root directory for R CMD check."
            exit 1
          fi
          echo "Found R package tarball: $TARBALL_NAME"
          echo "TARBALL_NAME=$TARBALL_NAME" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Run R CMD check on tarball
        run: |
          R CMD check ${{ steps.find_tarball.outputs.TARBALL_NAME }} --as-cran --no-manual --no-examples
        shell: bash
        env:
          _R_CHECK_CRAN_INCOMING_: false 
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
          path: ${{ steps.find_tarball.outputs.TARBALL_NAME }}.Rcheck 