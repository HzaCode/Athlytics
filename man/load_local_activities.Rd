% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_local_activities.R
\name{load_local_activities}
\alias{load_local_activities}
\title{Load Activities from Local Strava Export CSV}
\usage{
load_local_activities(
  csv_path = "strava_export_data/activities.csv",
  start_date = NULL,
  end_date = NULL,
  activity_types = NULL
)
}
\arguments{
\item{csv_path}{Path to the activities.csv file from Strava export.
Default is "strava_export_data/activities.csv".}

\item{start_date}{Optional. Start date (YYYY-MM-DD or Date/POSIXct) for filtering activities.
Defaults to NULL (no filtering).}

\item{end_date}{Optional. End date (YYYY-MM-DD or Date/POSIXct) for filtering activities.
Defaults to NULL (no filtering).}

\item{activity_types}{Optional. Character vector of activity types to include
(e.g., c("Run", "Ride")). Defaults to NULL (include all types).}
}
\value{
A tibble of activity data with standardized column names compatible
  with Athlytics functions. Key columns include:
  \itemize{
    \item \code{id}: Activity ID (numeric)
    \item \code{name}: Activity name
    \item \code{type}: Activity type (Run, Ride, etc.)
    \item \code{start_date_local}: Activity start datetime (POSIXct)
    \item \code{date}: Activity date (Date)
    \item \code{distance}: Distance in meters (numeric)
    \item \code{moving_time}: Moving time in seconds (integer)
    \item \code{elapsed_time}: Elapsed time in seconds (integer)
    \item \code{average_heartrate}: Average heart rate (numeric)
    \item \code{average_watts}: Average power in watts (numeric)
    \item \code{elevation_gain}: Elevation gain in meters (numeric)
  }
}
\description{
Reads and processes activity data from a local Strava export CSV file,
converting it to a format compatible with Athlytics analysis functions.
This function is designed to work with Strava's official data export
(Settings > My Account > Download or Delete Your Account > Get Started).
}
\details{
This function reads the activities.csv file from a Strava data export
and transforms the data to match the structure expected by Athlytics
analysis functions. The transformation includes:
\itemize{
  \item Converting column names to match API format
  \item Parsing dates into POSIXct format
  \item Converting distances to meters
  \item Converting times to seconds
  \item Filtering by date range and activity type if specified
}

**Important Note**: Due to Strava API terms of service restrictions,
this function should be used for personal analysis of your own exported
data only. When using this package for academic research, ensure compliance
with Strava's API Agreement and data usage policies.
}
\examples{
\dontrun{
# Load all activities from local export
activities <- load_local_activities()

# Load only running activities from 2023
activities <- load_local_activities(
  start_date = "2023-01-01",
  end_date = "2023-12-31",
  activity_types = "Run"
)

# Use with Athlytics functions
acwr_data <- calculate_acwr(activities, load_metric = "distance")
}

}
