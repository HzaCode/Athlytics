% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_pbs.R
\name{calculate_pbs}
\alias{calculate_pbs}
\title{Calculate Personal Bests (PBs)}
\usage{
calculate_pbs(
  stoken,
  activity_type = "Run",
  distance_meters,
  max_activities = 500,
  date_range = NULL
)
}
\arguments{
\item{stoken}{A valid Strava token from `rStrava::strava_oauth()`.}

\item{activity_type}{Type(s) of activities to search for PBs (e.g., "Run").
Note: Current logic relies on Strava's `best_efforts`, primarily available for Runs.}

\item{distance_meters}{Numeric vector of distances (in meters) to find PBs for (e.g., `c(1000, 5000, 10000)`).}

\item{max_activities}{Maximum number of recent activities to check. Default 500.
Reducing this can speed up the process and help avoid API rate limits.}

\item{date_range}{Optional. Filter activities within a date range `c("YYYY-MM-DD", "YYYY-MM-DD")`.}
}
\value{
A data frame containing all found best efforts for the specified distances.
  Includes columns: `activity_id`, `activity_date`, `distance`, `time_seconds` (elapsed time),
  `cumulative_pb_seconds` (the PB for that distance as of that date), `is_pb` (TRUE if this effort set a new PB),
  `distance_label` (e.g., "5k"), and `time_period` (formatted time).
}
\description{
Finds personal best times for specified distances from Strava activities.
}
\details{
Fetches detailed activity data, extracts Strava's 'best efforts', and calculates
cumulative PBs for specified distances.

Provides data for `plot_pbs`. Processes activities chronologically.
  Fetching detailed data is slow due to API limits (includes 1s delay per activity).
}
\examples{
\dontrun{
# Requires authentication first:
# stoken <- rStrava::strava_oauth(..., cache = TRUE)

# Calculate PBs for 1k, 5k, 10k (checking fewer activities for speed)
pb_data <- calculate_pbs(stoken = stoken, 
                           distance_meters = c(1000, 5000, 10000),
                           max_activities = 100)
print(head(pb_data))

# Show only the efforts that set a new PB
new_pbs <- pb_data[pb_data$is_pb, ]
print(new_pbs)
}
}
