% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_acwr.R
\name{plot_acwr}
\alias{plot_acwr}
\title{Plot ACWR Trend}
\usage{
plot_acwr(
  stoken,
  activity_type = NULL,
  load_metric = "duration_mins",
  acute_period = 7,
  chronic_period = 28,
  start_date = NULL,
  end_date = NULL,
  user_ftp = NULL,
  user_max_hr = NULL,
  user_resting_hr = NULL,
  smoothing_period = 7,
  highlight_zones = TRUE,
  acwr_df = NULL
)
}
\arguments{
\item{stoken}{A valid Strava token from `rStrava::strava_oauth()`. Required unless `acwr_df` is provided.}

\item{activity_type}{Optional. Filter activities by type (e.g., "Run", "Ride"). Default `NULL` includes all.}

\item{load_metric}{Method for calculating daily load (e.g., "duration_mins", "tss", "hrss"). Default "duration_mins".}

\item{acute_period}{Days for acute load window (e.g., 7).}

\item{chronic_period}{Days for chronic load window (e.g., 28). Must be > `acute_period`.}

\item{start_date}{Optional. Analysis start date (YYYY-MM-DD string or Date). Defaults to ~1 year ago.}

\item{end_date}{Optional. Analysis end date (YYYY-MM-DD string or Date). Defaults to today.}

\item{user_ftp}{Required if `load_metric = "tss"`. Your FTP.}

\item{user_max_hr}{Required if `load_metric = "hrss"`. Your max HR.}

\item{user_resting_hr}{Required if `load_metric = "hrss"`. Your resting HR.}

\item{smoothing_period}{Days for smoothing the ACWR using a rolling mean. Default 7.}

\item{highlight_zones}{Add background shading for typical ACWR zones (low, optimal, high risk)? Default `TRUE`.}

\item{acwr_df}{Optional. A pre-calculated data frame from `calculate_acwr`. If provided,
`stoken` and other calculation parameters are ignored.}
}
\value{
A ggplot object visualizing the smoothed ACWR trend.
}
\description{
Visualizes the Acute:Chronic Workload Ratio (ACWR) trend over time.
}
\details{
This function calculates ACWR based on Strava activity data and a chosen load metric,
then generates a ggplot showing the smoothed ACWR trend, optionally with typical
risk zone shading.

If `acwr_df` is not supplied, the function first calls `calculate_acwr`
  to get the necessary data. It then plots the smoothed ACWR. Risk zone boundaries
  (if `highlight_zones = TRUE`) are based on common conventions (e.g., 0.8-1.3 optimal,
  >1.5 high risk) but may need adjustment based on individual context.
}
\examples{
\dontrun{
# Requires authentication first:
# stoken <- rStrava::strava_oauth(..., cache = TRUE)

# Plot ACWR for Runs using duration
plot_acwr(stoken = stoken, activity_type = "Run", load_metric = "duration_mins")

# Plot ACWR for Rides using TSS (requires FTP)
plot_acwr(stoken = stoken, activity_type = "Ride", load_metric = "tss", user_ftp = 280)

# Plot ACWR for all activities using distance, with custom periods
plot_acwr(stoken = stoken,
          load_metric = "distance_km",
          acute_period = 10,
          chronic_period = 40,
          smoothing_period = 10)

# Plot pre-calculated ACWR data
# acwr_results <- calculate_acwr(...) 
# plot_acwr(acwr_df = acwr_results)
}
}
